[["index.html", "AlberdiLab | Aizpurua et al. 2024 Calotriton metagenomics Chapter 1 Introduction 1.1 Prepare the R environment", " AlberdiLab | Aizpurua et al. 2024 Calotriton metagenomics Ostaizka Aizpurua1 Carlos Cabido2 Garazi Martin Bideguren3 Antton Alberdi4 2024-12-09 Chapter 1 Introduction This webbook contains all the code used for data analysis in study of gut microbiomes of newts across ponds included in a restoration plan. 1.1 Prepare the R environment 1.1.1 Environment To reproduce all the analyses locally, clone this repository in your computer using: RStudio &gt; New Project &gt; Version Control &gt; Git And indicating the following git repository: https://github.com/alberdilab/calotriton_metagenomics.git Once the R project has been created, follow the instructions and code chunks shown in this webbook. 1.1.2 Libraries The following R packages are required for the data analysis. # Base library(R.utils) library(knitr) library(tidyverse) library(devtools) library(tinytable) library(rairtable) library(janitor) # For tree handling library(ape) library(phyloseq) library(phytools) # For plotting library(ggplot2) library(ggrepel) library(ggpubr) library(ggnewscale) library(gridExtra) library(ggtreeExtra) library(ggtree) library(ggh4x) library(UpSetR) # For statistics library(spaa) library(vegan) library(Rtsne) library(geiger) library(hilldiv2) library(distillR) library(ANCOMBC) library(lme4) library(nlme) library(pairwiseAdonis) library(emmeans) University of Copenhagen, ostaizka.aizpurua@sund.ku.dk↩︎ Aranzadi Science Society↩︎ University of Copenhagen, garazi.bideguren@sund.ku.dk↩︎ University of Copenhagen, antton.alberdi@sund.ku.dk↩︎ "],["prepare-data.html", "Chapter 2 Prepare data 2.1 Load gut data 2.2 Create working objects 2.3 Prepare color scheme 2.4 Wrap working objects 2.5 Load skin data 2.6 Create working objects 2.7 Prepare color scheme 2.8 Wrap working objects", " Chapter 2 Prepare data 2.1 Load gut data Load the original data files outputted by the bioinformatic pipeline. 2.1.1 Reads read_counts &lt;- read_tsv(&quot;data/gut/DMB0156_counts.tsv.gz&quot;) %&gt;% rename(genome=1) 2.1.2 Sample metadata sample_metadata &lt;- read_csv(&quot;data/PR_Preprocessing-Full view.csv&quot;) %&gt;% select(&quot;EHI_number&quot;,&quot;capture_id_flat&quot;, &quot;species&quot;,&quot;sample_type&quot;, &quot;sex&quot;, &quot;latitude&quot;, &quot;longitude&quot;,&quot;singlem_fraction&quot;,&quot;reads_post_fastp&quot;,&quot;metagenomic_bases&quot;,&quot;host_bases&quot;, &quot;bases_lost_fastp_percent_flat&quot;) %&gt;% rename(sample=1) %&gt;% filter(sample_type == &quot;Faecal&quot;) %&gt;% filter(sample %in% colnames(read_counts)) %&gt;% filter(!sample %in% c(&quot;EHI02067&quot;, &quot;EHI02105&quot;, &quot;EHI02079&quot;, &quot;EHI02097&quot;))%&gt;% mutate(environment = case_when( longitude &lt; -1.5 ~ &quot;low&quot;, longitude &gt; -1.5 ~ &quot;high&quot;, TRUE ~ NA_character_ # Default case if no match ))%&gt;% mutate(river = case_when( latitude == 43.00 ~ &quot;Erlan&quot;, latitude == 43.03 ~ &quot;Harpea&quot;, latitude == 43.16 ~ &quot;Goizueta&quot;, latitude == 43.14 ~ &quot;Leitzaran&quot;, TRUE ~ NA_character_ # Default case if no match )) 2.1.3 Filter read counts read_counts &lt;- read_counts %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0))%&gt;% select(one_of(c(&quot;genome&quot;,sample_metadata$sample))) 2.1.4 Genome taxonomy genome_metadata &lt;- read_tsv(&quot;data/gut/DMB0156_mag_info.tsv.gz&quot;) %&gt;% rename(length=mag_size)%&gt;% semi_join(., read_counts, by = &quot;genome&quot;) %&gt;% arrange(match(genome,read_counts$genome)) 2.1.5 Genome base hits genome_coverage &lt;- read_tsv(&quot;data/gut/DMB0156_coverage.tsv.gz&quot;) %&gt;% rename(genome=1) %&gt;% select(one_of(c(&quot;genome&quot;,sample_metadata$sample)))%&gt;% semi_join(., genome_metadata, by = &quot;genome&quot;)%&gt;% arrange(match(genome, read_counts$genome)) 2.1.6 Genome tree genome_tree &lt;- read_tree(&quot;data/gut/DMB0156.tree&quot;) genome_tree$tip.label &lt;- str_replace_all(genome_tree$tip.label,&quot;&#39;&quot;, &quot;&quot;) #remove single quotes in MAG names genome_tree &lt;- keep.tip(genome_tree, tip=genome_metadata$genome) # keep only MAG tips 2.1.7 Genome annotations Downloading individual annotation files from ERDA using information in Airtable and writing them to a single compressed table takes a while. The following chunk only needs to be run once, to generate the genome_annotations table that is saved in the data directory. Note that the airtable connection requires a personal access token. airtable(&quot;MAGs&quot;, &quot;appWbHBNLE6iAsMRV&quot;) %&gt;% #get base ID from Airtable browser URL read_airtable(., fields = c(&quot;ID&quot;,&quot;mag_name&quot;,&quot;number_genes&quot;,&quot;anno_url&quot;), id_to_col = TRUE) %&gt;% #get 3 columns from MAGs table filter(mag_name %in% paste0(genome_metadata$genome,&quot;.fa&quot;)) %&gt;% #filter by MAG name filter(number_genes &gt; 0) %&gt;% #genes need to exist select(anno_url) %&gt;% #list MAG annotation urls pull() %&gt;% read_tsv() %&gt;% #load all tables rename(gene=1, genome=2, contig=3) %&gt;% #rename first 3 columns write_tsv(file=&quot;data/gut/genome_annotations.tsv.xz&quot;) #write to overall compressed file genome_annotations &lt;- read_tsv(&quot;data/gut/genome_annotations.tsv.xz&quot;) %&gt;% rename(gene=1, genome=2, contig=3) 2.2 Create working objects Transform the original data files into working objects for downstream analyses. 2.2.1 Filter reads by coverage min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) 2.2.2 Transform reads into genome counts readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 2.2.3 Distill annotations into GIFTs genome_gifts_raw &lt;- distill(genome_annotations,GIFT_db,genomecol=2,annotcol=c(9,10,19), verbosity=F) genome_counts_filt &lt;- genome_counts_filt[genome_counts_filt$genome %in% rownames(genome_gifts_raw),] genome_gifts &lt;- genome_gifts_raw[genome_counts_filt$genome,] genome_gifts &lt;- genome_gifts[, colSums(genome_gifts != 0) &gt; 0] 2.3 Prepare color scheme AlberdiLab projects use unified color schemes developed for the Earth Hologenome Initiative, to facilitate figure interpretation. phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% pull(colors, name=phylum) altitude_colors&lt;- c(&quot;#429ef5&quot;,&quot;#a8c3f0&quot;,&quot;#f56c42&quot;,&quot;#f29c80&quot;) treatment_colors &lt;- c(&quot;#429ef5&quot;,&quot;#f56042&quot;) 2.4 Wrap working objects All working objects are wrapped into a single Rdata object to facilitate downstream usage. save(sample_metadata, genome_metadata, read_counts, genome_counts, genome_counts_filt, genome_tree, genome_gifts_raw, genome_gifts, phylum_colors, altitude_colors, treatment_colors, file = &quot;data/gut/data.Rdata&quot;) 2.5 Load skin data Load the original data files outputted by the bioinformatic pipeline. 2.5.1 Reads read_counts &lt;- read_tsv(&quot;data/skin/DMB0171_counts.tsv.gz&quot;) %&gt;% rename(genome=1) 2.5.2 Sample metadata sample_metadata &lt;- read_csv(&quot;data/PR_Preprocessing-Full view.csv&quot;) %&gt;% select(&quot;EHI_number&quot;,&quot;capture_id_flat&quot;, &quot;species&quot;,&quot;sample_type&quot;, &quot;sex&quot;, &quot;latitude&quot;, &quot;longitude&quot;,&quot;singlem_fraction&quot;,&quot;reads_post_fastp&quot;,&quot;metagenomic_bases&quot;,&quot;host_bases&quot;, &quot;bases_lost_fastp_percent_flat&quot;) %&gt;% rename(sample=1) %&gt;% filter(sample_type %in% c(&quot;Skin swab: dorsal&quot;, &quot;Skin swab: ventral&quot;)) %&gt;% filter(sample %in% colnames(read_counts)) %&gt;% separate(sample_type, c(&quot;sample_type&quot;, &quot;position&quot;), sep = &quot;:&quot;) %&gt;% mutate(environment = case_when( longitude &lt; -1.5 ~ &quot;low&quot;, longitude &gt; -1.5 ~ &quot;high&quot;, TRUE ~ NA_character_ # Default case if no match ))%&gt;% mutate(river = case_when( latitude == 43.00 ~ &quot;Erlan&quot;, latitude == 43.03 ~ &quot;Harpea&quot;, latitude == 43.16 ~ &quot;Goizueta&quot;, latitude == 43.14 ~ &quot;Leitzaran&quot;, TRUE ~ NA_character_ # Default case if no match ))%&gt;% select(-species, -sample_type, -latitude, -longitude) # filter(!sample %in% c(&quot;EHI02973&quot;, &quot;EHI02983&quot;, &quot;EHI02978&quot;, &quot;EHI02987&quot;, &quot;EHI02976&quot;, &quot;EHI02988&quot;, ))%&gt;% 2.5.3 Read counts arrange read_counts &lt;- read_counts %&gt;% select(one_of(c(&quot;genome&quot;,sample_metadata$sample))) 2.5.4 Genome taxonomy genome_metadata &lt;- read_tsv(&quot;data/skin/DMB0171_mag_info.tsv.gz&quot;) %&gt;% rename(length=mag_size)%&gt;% semi_join(., read_counts, by = &quot;genome&quot;) %&gt;% arrange(match(genome,read_counts$genome)) 2.5.5 Genome base hits genome_coverage &lt;- read_tsv(&quot;data/skin/DMB0171_coverage.tsv.gz&quot;) %&gt;% rename(genome=1) %&gt;% select(one_of(c(&quot;genome&quot;,sample_metadata$sample)))%&gt;% semi_join(., genome_metadata, by = &quot;genome&quot;)%&gt;% arrange(match(genome, read_counts$genome)) 2.5.6 Genome tree genome_tree &lt;- read_tree(&quot;data/skin/DMB0171.tree&quot;) genome_tree$tip.label &lt;- str_replace_all(genome_tree$tip.label,&quot;&#39;&quot;, &quot;&quot;) #remove single quotes in MAG names genome_tree &lt;- keep.tip(genome_tree, tip=genome_metadata$genome) # keep only MAG tips 2.5.7 Genome annotations Downloading individual annotation files from ERDA using information in Airtable and writing them to a single compressed table takes a while. The following chunk only needs to be run once, to generate the genome_annotations table that is saved in the data directory. Note that the airtable connection requires a personal access token. airtable(&quot;MAGs&quot;, &quot;appWbHBNLE6iAsMRV&quot;) %&gt;% #get base ID from Airtable browser URL read_airtable(., fields = c(&quot;ID&quot;,&quot;mag_name&quot;,&quot;number_genes&quot;,&quot;anno_url&quot;), id_to_col = TRUE) %&gt;% #get 3 columns from MAGs table filter(mag_name %in% paste0(genome_metadata$genome,&quot;.fa&quot;)) %&gt;% #filter by MAG name filter(number_genes &gt; 0) %&gt;% #genes need to exist select(anno_url) %&gt;% #list MAG annotation urls pull() %&gt;% read_tsv() %&gt;% #load all tables rename(gene=1, genome=2, contig=3) %&gt;% #rename first 3 columns write_tsv(file=&quot;data/skin/genome_annotations.tsv.xz&quot;) #write to overall compressed file genome_annotations &lt;- read_tsv(&quot;data/skin/genome_annotations.tsv.xz&quot;) %&gt;% rename(gene=1, genome=2, contig=3) 2.6 Create working objects Transform the original data files into working objects for downstream analyses. 2.6.1 Filter reads by coverage min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) 2.6.2 Transform reads into genome counts readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0))%&gt;% rownames_to_column(&quot;genome&quot;) sample_metadata &lt;- sample_metadata %&gt;% filter(sample %in% colnames(genome_counts_filt)) 2.6.3 Distill annotations into GIFTs genome_gifts &lt;- distill(genome_annotations,GIFT_db,genomecol=2,annotcol=c(9,10,19), verbosity=F) 2.7 Prepare color scheme AlberdiLab projects use unified color schemes developed for the Earth Hologenome Initiative, to facilitate figure interpretation. phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% pull(colors, name=phylum) altitude_colors&lt;- c(&quot;#429ef5&quot;,&quot;#a8c3f0&quot;,&quot;#f56c42&quot;,&quot;#f29c80&quot;) treatment_colors &lt;- c(&quot;#429ef5&quot;,&quot;#f56042&quot;) 2.8 Wrap working objects All working objects are wrapped into a single Rdata object to facilitate downstream usage. save(sample_metadata, genome_metadata, read_counts, genome_counts, genome_counts_filt, genome_tree, genome_gifts, phylum_colors, altitude_colors, treatment_colors, file = &quot;data/skin/data.Rdata&quot;) "],["data-statistics.html", "Chapter 3 Data statistics 3.1 Gut microbiota 3.2 Sequencing reads statistics 3.3 DNA fractions 3.4 Recovered microbial fraction 3.5 Skin microbiota", " Chapter 3 Data statistics 3.1 Gut microbiota load(&quot;data/gut/data.Rdata&quot;) 3.2 Sequencing reads statistics sample_metadata %&gt;% summarise(Total=sum(reads_post_fastp * 150 / 1000000000) %&gt;% round(2), mean=mean(reads_post_fastp * 150 / 1000000000) %&gt;% round(2), sd=sd(reads_post_fastp * 150 / 1000000000) %&gt;% round(2)) %&gt;% unite(&quot;Average&quot;,mean, sd, sep = &quot; ± &quot;, remove = TRUE) %&gt;% tt() .table td.tinytable_css_vccprnncrd4ufaqlvvgz, .table th.tinytable_css_vccprnncrd4ufaqlvvgz { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_s0vplqatcv04rv59q72r, .table th.tinytable_css_s0vplqatcv04rv59q72r { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } Total Average 154.38 4.98 ± 1.49 3.3 DNA fractions sequence_fractions &lt;- read_counts %&gt;% pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;value&quot;) %&gt;% group_by(sample) %&gt;% summarise(mags = sum(value)) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% select(sample,mags,metagenomic_bases,host_bases,bases_lost_fastp_percent_flat) %&gt;% mutate(mags_bases = mags*146) %&gt;% mutate(lowqual_bases = ((metagenomic_bases+host_bases)/(1-bases_lost_fastp_percent_flat))-(metagenomic_bases+host_bases)) %&gt;% mutate(unmapped_bases = metagenomic_bases - mags_bases) %&gt;% mutate(unmapped_bases = ifelse(unmapped_bases &lt; 0, 0, unmapped_bases)) %&gt;% select(sample, lowqual_bases, host_bases, unmapped_bases, mags_bases) sequence_fractions %&gt;% mutate_at(vars(-sample), ~./1000000000) %&gt;% rename(&quot;Sample&quot;=1, &quot;Low quality&quot;=2, &quot;Mapped to host&quot;=3, &quot;Unmapped&quot;=4, &quot;Mapped to MAGs&quot;=5) %&gt;% tt() .table td.tinytable_css_t6ugg5kgz4ban0v1aric, .table th.tinytable_css_t6ugg5kgz4ban0v1aric { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_hdjb9lnd6a6iogmbzvdb, .table th.tinytable_css_hdjb9lnd6a6iogmbzvdb { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } Sample Low quality Mapped to host Unmapped Mapped to MAGs EHI01966 0.3592507 0.005030679 1.9178067 2.507921 EHI01967 0.2688945 0.000709418 0.8339877 4.617569 EHI01968 0.3476583 0.000167184 1.2259195 5.669136 EHI01970 0.2559148 0.000235551 1.1356328 3.939774 EHI01979 0.3042145 0.000429188 1.1643291 3.963429 EHI01982 0.2324871 0.003106822 1.2765585 2.120459 EHI01985 0.3363365 0.000294977 1.3705302 4.091743 EHI01989 0.3233329 0.000570792 1.2444290 3.406020 EHI01992 0.2093722 0.000650860 1.3810604 2.863645 EHI01995 0.2434254 0.001014484 1.0559948 2.625781 EHI02065 0.2906290 0.000248787 0.9495023 3.524029 EHI02088 0.5343344 0.002508850 1.7069668 4.880649 EHI02582 0.1571276 0.000041661 0.7099037 3.061117 EHI02584 0.2143305 0.000243149 1.3719978 3.909083 EHI02585 0.3039484 0.000693419 1.3837783 4.156742 EHI02587 0.2007459 0.001053113 1.1718219 3.773711 EHI02592 0.2205384 0.000807086 1.0309674 3.998601 EHI02598 0.1917940 0.000085434 1.1517125 3.984019 EHI02602 0.1777105 0.000148220 1.2512663 2.802077 EHI02603 0.2175888 0.002208379 1.3526444 3.734602 EHI02607 0.2175072 0.000239951 1.5274046 3.978722 EHI02612 0.1382147 0.000170810 0.6921896 2.540514 EHI02615 0.1905417 0.000351599 0.6650246 1.618650 EHI02617 0.1969034 0.000243466 1.3981847 2.879747 EHI02619 0.2275584 0.000086283 0.9636172 3.865591 EHI02624 0.2065623 0.000351284 1.0437963 3.443889 EHI02625 0.1167259 0.000023503 0.5396744 1.996437 EHI02630 0.2010096 0.000258866 0.9279985 3.240507 EHI02632 0.3731687 0.000748839 1.4198031 2.929934 EHI02633 0.2783925 0.000903128 1.3810886 5.477885 EHI02639 0.4696011 0.001126284 2.1791314 8.022893 sequence_fractions %&gt;% mutate_at(vars(-sample), ~./1000000000) %&gt;% rename(&quot;Sample&quot;=1, &quot;Low quality&quot;=2, &quot;Mapped to host&quot;=3, &quot;Unmapped&quot;=4, &quot;Mapped to MAGs&quot;=5) %&gt;% summarise(across(where(is.numeric), mean, na.rm = TRUE)) %&gt;% tt() .table td.tinytable_css_jnv7k6eyfcddee8nnbni, .table th.tinytable_css_jnv7k6eyfcddee8nnbni { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_40wloe06vtmqu4i1y3mo, .table th.tinytable_css_40wloe06vtmqu4i1y3mo { border-bottom: solid #d3d8dc 0.1em; } Low quality Mapped to host Unmapped Mapped to MAGs 0.2582523 0.0007984537 1.207249 3.665319 sequence_fractions %&gt;% pivot_longer(!sample, names_to = &quot;fraction&quot;, values_to = &quot;value&quot;) %&gt;% mutate(value = value / 1000000000) %&gt;% mutate(fraction = factor(fraction, levels = c(&quot;lowqual_bases&quot;,&quot;host_bases&quot;,&quot;unmapped_bases&quot;,&quot;mags_bases&quot;))) %&gt;% ggplot(., aes(x = sample, y = value, fill=fraction)) + geom_bar(position=&quot;stack&quot;, stat = &quot;identity&quot;) + scale_fill_manual(name=&quot;Sequence type&quot;, breaks=c(&quot;lowqual_bases&quot;,&quot;host_bases&quot;,&quot;unmapped_bases&quot;,&quot;mags_bases&quot;), labels=c(&quot;Low quality&quot;,&quot;Mapped to host&quot;,&quot;Unmapped&quot;,&quot;Mapped to MAGs&quot;), values=c(&quot;#CCCCCC&quot;, &quot;#bcdee1&quot;, &quot;#d8b8a3&quot;,&quot;#93655c&quot;))+ labs(x = &quot;Samples&quot;, y = &quot;Amount of data (GB)&quot;) + theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size=6),legend.position = &quot;bottom&quot;) 3.4 Recovered microbial fraction singlem_table &lt;- sequence_fractions %&gt;% mutate(mags_proportion = round((mags_bases / (mags_bases + unmapped_bases))*100,2)) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% mutate(singlem_proportion = round(singlem_fraction,2)) %&gt;% select(sample,mags_proportion,singlem_proportion) %&gt;% mutate(mags_proportion = ifelse(singlem_proportion == 0, 0, mags_proportion)) %&gt;% #convert zeros to NA mutate(singlem_proportion = ifelse(singlem_proportion == 0, NA, singlem_proportion)) %&gt;% #convert zeros to NA mutate(singlem_proportion = ifelse(singlem_proportion &lt; mags_proportion, NA, singlem_proportion)) %&gt;% #if singlem is smaller, then NA, to simplify plot mutate(singlem_proportion = ifelse(singlem_proportion &gt; 100, 100, singlem_proportion)) #simplify singlem_table %&gt;% pivot_longer(!sample, names_to = &quot;proportion&quot;, values_to = &quot;value&quot;) %&gt;% mutate(proportion = factor(proportion, levels = c(&quot;mags_proportion&quot;,&quot;singlem_proportion&quot;))) %&gt;% ggplot(., aes(x = value, y = sample, color=proportion)) + geom_line(aes(group = sample), color = &quot;#f8a538&quot;) + geom_point() + scale_color_manual(name=&quot;Proportion&quot;, breaks=c(&quot;mags_proportion&quot;,&quot;singlem_proportion&quot;), labels=c(&quot;Recovered&quot;,&quot;Estimated&quot;), values=c(&quot;#52e1e8&quot;, &quot;#876b53&quot;))+ theme_classic() + labs(y = &quot;Samples&quot;, x = &quot;Prokaryotic fraction (%)&quot;) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size=6),legend.position = &quot;right&quot;) damr &lt;- singlem_table %&gt;% mutate(damr=ifelse(is.na(singlem_proportion),100,mags_proportion/singlem_proportion*100)) %&gt;% select(sample,damr) damr %&gt;% tt() .table td.tinytable_css_7rkhqk22v00dv38fdchz, .table th.tinytable_css_7rkhqk22v00dv38fdchz { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_5a68oa5ot3dln8l6bsra, .table th.tinytable_css_5a68oa5ot3dln8l6bsra { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } sample damr EHI01966 100.00000 EHI01967 100.00000 EHI01968 100.00000 EHI01970 100.00000 EHI01979 100.00000 EHI01982 100.00000 EHI01985 100.00000 EHI01989 100.00000 EHI01992 100.00000 EHI01995 100.00000 EHI02065 100.00000 EHI02088 100.00000 EHI02582 100.00000 EHI02584 98.69333 EHI02585 100.00000 EHI02587 100.00000 EHI02592 100.00000 EHI02598 100.00000 EHI02602 100.00000 EHI02603 100.00000 EHI02607 100.00000 EHI02612 100.00000 EHI02615 100.00000 EHI02617 100.00000 EHI02619 100.00000 EHI02624 100.00000 EHI02625 100.00000 EHI02630 100.00000 EHI02632 99.58604 EHI02633 100.00000 EHI02639 100.00000 damr %&gt;% filter(damr&gt;95) %&gt;% nrow() [1] 31 damr %&gt;% summarise(mean=mean(damr),sd=sd(damr)) %&gt;% tt() .table td.tinytable_css_u49zhbjnnp994occyqgl, .table th.tinytable_css_u49zhbjnnp994occyqgl { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_bhaktcnyd0lrpzomzdqm, .table th.tinytable_css_bhaktcnyd0lrpzomzdqm { border-bottom: solid #d3d8dc 0.1em; } mean sd 99.9445 0.2438057 3.5 Skin microbiota load(&quot;data/skin/data.Rdata&quot;) 3.5.1 Sequencing reads statistics sample_metadata %&gt;% summarise(Total=sum(reads_post_fastp * 150 / 1000000000) %&gt;% round(2), mean=mean(reads_post_fastp * 150 / 1000000000) %&gt;% round(2), sd=sd(reads_post_fastp * 150 / 1000000000) %&gt;% round(2)) %&gt;% unite(&quot;Average&quot;,mean, sd, sep = &quot; ± &quot;, remove = TRUE) %&gt;% tt() .table td.tinytable_css_v81c7td7ske6l3bn91we, .table th.tinytable_css_v81c7td7ske6l3bn91we { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_lnzavxt9k82ar6vuepoe, .table th.tinytable_css_lnzavxt9k82ar6vuepoe { border-bottom: solid #d3d8dc 0.1em; } Total Average 148.52 4.95 ± 2.43 3.5.2 DNA fractions sequence_fractions &lt;- read_counts %&gt;% pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;value&quot;) %&gt;% group_by(sample) %&gt;% summarise(mags = sum(value)) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% select(sample,mags,metagenomic_bases,host_bases,bases_lost_fastp_percent_flat) %&gt;% mutate(mags_bases = mags*146) %&gt;% mutate(lowqual_bases = ((metagenomic_bases+host_bases)/(1-bases_lost_fastp_percent_flat))-(metagenomic_bases+host_bases)) %&gt;% mutate(unmapped_bases = metagenomic_bases - mags_bases) %&gt;% mutate(unmapped_bases = ifelse(unmapped_bases &lt; 0, 0, unmapped_bases)) %&gt;% select(sample, lowqual_bases, host_bases, unmapped_bases, mags_bases) sequence_fractions %&gt;% mutate_at(vars(-sample), ~./1000000000) %&gt;% rename(&quot;Sample&quot;=1, &quot;Low quality&quot;=2, &quot;Mapped to host&quot;=3, &quot;Unmapped&quot;=4, &quot;Mapped to MAGs&quot;=5) %&gt;% tt() .table td.tinytable_css_vgzn6nsdmkwbrwygpn60, .table th.tinytable_css_vgzn6nsdmkwbrwygpn60 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_7m7ycxwev6tdumlphs2j, .table th.tinytable_css_7m7ycxwev6tdumlphs2j { border-bottom: solid #d3d8dc 0.1em; } Sample Low quality Mapped to host Unmapped Mapped to MAGs EHI02693 0.3656028 0.097969564 6.373785 0.060807978 EHI02694 NA NA NA 0.008287982 EHI02695 0.6363434 0.160056279 10.420471 0.146405004 EHI02696 0.5949337 0.038103934 8.635206 2.172790250 EHI02697 0.3849925 0.084818306 5.641727 0.199814870 EHI02698 0.8011659 0.161536852 10.942059 0.420866316 EHI02951 0.2826013 0.059291822 3.713183 0.040594570 EHI02952 0.2918076 0.046142515 3.327693 0.387241202 EHI02953 NA NA NA 0.007431108 EHI02954 0.2298555 0.053655910 3.394955 0.152459332 EHI02955 0.2619619 0.058645754 3.808844 0.165005842 EHI02956 0.2885284 0.052076554 3.324154 0.034323286 EHI02957 0.2555607 0.054704131 3.513933 0.047933260 EHI02958 0.2981192 0.035064524 2.661313 0.317939528 EHI02965 0.2467497 0.020883675 2.237014 0.432848682 EHI02972 NA NA NA 0.005942200 EHI02973 0.2285027 0.041722250 3.054209 0.302593322 EHI02974 0.4320174 0.089409460 5.694132 0.045562804 EHI02975 0.2954039 0.047720365 3.155249 0.104113768 EHI02976 0.3661559 0.078213660 5.369937 0.288292184 EHI02977 0.2174293 0.042220191 2.834641 0.056858824 EHI02978 0.2576849 0.050520029 3.471193 0.124919206 EHI02979 0.4809949 0.097637393 6.178884 0.113839120 EHI02980 0.3179099 0.059887814 4.043817 0.119955936 EHI02981 0.2781935 0.053598139 3.556576 0.143422662 EHI02982 0.3164171 0.071933621 4.699856 0.098959822 EHI02983 0.3818723 0.061003564 4.146302 0.306621024 EHI02984 0.3878321 0.021029641 2.389607 0.488244148 EHI02985 0.2124957 0.033953901 2.947095 0.179402756 EHI02986 0.4282323 0.061379894 4.410483 0.259329726 EHI02987 0.2445139 0.009835086 1.979218 0.748309568 EHI02988 0.3672799 0.076039858 4.793541 0.164314970 EHI02989 0.2954063 0.056075460 3.519312 0.016131394 sequence_fractions %&gt;% mutate_at(vars(-sample), ~./1000000000) %&gt;% rename(&quot;Sample&quot;=1, &quot;Low quality&quot;=2, &quot;Mapped to host&quot;=3, &quot;Unmapped&quot;=4, &quot;Mapped to MAGs&quot;=5) %&gt;% summarise(across(where(is.numeric), mean, na.rm = TRUE)) %&gt;% tt() .table td.tinytable_css_s0szfu8ir2c7r295hkq6, .table th.tinytable_css_s0szfu8ir2c7r295hkq6 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_ebqjdt784anmqe2o6jen, .table th.tinytable_css_ebqjdt784anmqe2o6jen { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } Low quality Mapped to host Unmapped Mapped to MAGs 0.3482188 0.06250434 4.474613 0.2473201 sequence_fractions %&gt;% pivot_longer(!sample, names_to = &quot;fraction&quot;, values_to = &quot;value&quot;) %&gt;% mutate(value = value / 1000000000) %&gt;% mutate(fraction = factor(fraction, levels = c(&quot;lowqual_bases&quot;,&quot;host_bases&quot;,&quot;unmapped_bases&quot;,&quot;mags_bases&quot;))) %&gt;% ggplot(., aes(x = sample, y = value, fill=fraction)) + geom_bar(position=&quot;stack&quot;, stat = &quot;identity&quot;) + scale_fill_manual(name=&quot;Sequence type&quot;, breaks=c(&quot;lowqual_bases&quot;,&quot;host_bases&quot;,&quot;unmapped_bases&quot;,&quot;mags_bases&quot;), labels=c(&quot;Low quality&quot;,&quot;Mapped to host&quot;,&quot;Unmapped&quot;,&quot;Mapped to MAGs&quot;), values=c(&quot;#CCCCCC&quot;, &quot;#bcdee1&quot;, &quot;#d8b8a3&quot;,&quot;#93655c&quot;))+ labs(x = &quot;Samples&quot;, y = &quot;Amount of data (GB)&quot;) + theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size=6),legend.position = &quot;bottom&quot;) 3.5.3 Recovered microbial fraction singlem_table &lt;- sequence_fractions %&gt;% mutate(mags_proportion = round((mags_bases / (mags_bases + unmapped_bases))*100,2)) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% mutate(singlem_proportion = round(singlem_fraction,2)) %&gt;% select(sample,mags_proportion,singlem_proportion) %&gt;% mutate(mags_proportion = ifelse(singlem_proportion == 0, 0, mags_proportion)) %&gt;% #convert zeros to NA mutate(singlem_proportion = ifelse(singlem_proportion == 0, NA, singlem_proportion)) %&gt;% #convert zeros to NA mutate(singlem_proportion = ifelse(singlem_proportion &lt; mags_proportion, NA, singlem_proportion)) %&gt;% #if singlem is smaller, then NA, to simplify plot mutate(singlem_proportion = ifelse(singlem_proportion &gt; 100, 100, singlem_proportion)) #simplify singlem_table %&gt;% pivot_longer(!sample, names_to = &quot;proportion&quot;, values_to = &quot;value&quot;) %&gt;% mutate(proportion = factor(proportion, levels = c(&quot;mags_proportion&quot;,&quot;singlem_proportion&quot;))) %&gt;% ggplot(., aes(x = value, y = sample, color=proportion)) + geom_line(aes(group = sample), color = &quot;#f8a538&quot;) + geom_point() + scale_color_manual(name=&quot;Proportion&quot;, breaks=c(&quot;mags_proportion&quot;,&quot;singlem_proportion&quot;), labels=c(&quot;Recovered&quot;,&quot;Estimated&quot;), values=c(&quot;#52e1e8&quot;, &quot;#876b53&quot;))+ theme_classic() + labs(y = &quot;Samples&quot;, x = &quot;Prokaryotic fraction (%)&quot;) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size=6),legend.position = &quot;right&quot;) damr &lt;- singlem_table %&gt;% mutate(damr=ifelse(is.na(singlem_proportion),100,mags_proportion/singlem_proportion*100)) %&gt;% select(sample,damr) damr %&gt;% summarise(mean=mean(damr),sd=sd(damr)) %&gt;% tt() .table td.tinytable_css_8hu63og5xajpvdiwdb8d, .table th.tinytable_css_8hu63og5xajpvdiwdb8d { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_6lcez9y0k1g11py0fjx4, .table th.tinytable_css_6lcez9y0k1g11py0fjx4 { border-bottom: solid #d3d8dc 0.1em; } mean sd 56.20458 16.63647 "],["mag-catalogue.html", "Chapter 4 MAG catalogue 4.1 Gut microbiota 4.2 Skin microbiota", " Chapter 4 MAG catalogue 4.1 Gut microbiota load(&quot;data/gut/data.Rdata&quot;) 4.1.1 Genome phylogeny # Generate the phylum color heatmap phylum_heatmap &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(genome,phylum) %&gt;% mutate(phylum = factor(phylum, levels = unique(phylum))) %&gt;% column_to_rownames(var = &quot;genome&quot;) # Generate new species table newspecies_table &lt;- genome_metadata %&gt;% mutate(newspecies=ifelse(species==&quot;s__&quot;,&quot;Y&quot;,&quot;N&quot;)) %&gt;% select(genome,newspecies) %&gt;% column_to_rownames(var = &quot;genome&quot;) # Generate basal tree circular_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% # extend to ultrametric for the sake of visualisation ggtree(., layout=&quot;fan&quot;, open.angle=10, size=0.5) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** # Add phylum ring # circular_tree &lt;- gheatmap(circular_tree, phylum_heatmap, offset=0.55, width=0.1, colnames=FALSE) + # scale_fill_manual(values=phylum_colors) + # geom_tiplab2(size=1, hjust=-0.1) + # theme(legend.position = &quot;none&quot;, plot.margin = margin(0, 0, 0, 0), panel.margin = margin(0, 0, 0, 0)) circular_tree &lt;- gheatmap(circular_tree, phylum_heatmap, offset=0.05, width=0.05, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + labs(fill=&quot;Phylum&quot;) #theme(legend.position = &quot;none&quot;, plot.margin = margin(0, 0, 0, 0), panel.margin = margin(0, 0, 0, 0)) # Flush color scale to enable a new color scheme in the next ring circular_tree &lt;- circular_tree + new_scale_fill() # Add completeness ring circular_tree &lt;- circular_tree + new_scale_fill() + scale_fill_gradient(low = &quot;#d1f4ba&quot;, high = &quot;#f4baba&quot;) + geom_fruit( data=genome_metadata, geom=geom_bar, mapping = aes(x=completeness, y=genome, fill=contamination), offset = 0.24, pwidth = 0.1, orientation=&quot;y&quot;, stat=&quot;identity&quot;)+ labs(fill=&quot;Contamination&quot;) # Add genome-size ring circular_tree &lt;- circular_tree + new_scale_fill() circular_tree &lt;- gheatmap(circular_tree, newspecies_table, offset=0.3, width=0.05, colnames=FALSE) + scale_fill_manual(values=c(&quot;#f4f4f4&quot;,&quot;#74C8AE&quot;))+ labs(fill=&quot;New species&quot;) #theme(legend.position = &quot;none&quot;, plot.margin = margin(0, 0, 0, 0), panel.margin = margin(0, 0, 0, 0)) circular_tree &lt;- circular_tree + geom_fruit( data=genome_metadata, geom=geom_bar, mapping = aes(x=length, y=genome), fill = &quot;#1e6e55&quot;, offset = 0.05, orientation=&quot;y&quot;, stat=&quot;identity&quot;) # Add text circular_tree &lt;- circular_tree + annotate(&#39;text&#39;, x=3.1, y=0, label=&#39; Phylum&#39;, family=&#39;arial&#39;, size=3.5) + annotate(&#39;text&#39;, x=3.7, y=0, label=&#39; Genome quality&#39;, family=&#39;arial&#39;, size=3.5) + annotate(&#39;text&#39;, x=4.1, y=0, label=&#39; Genome size&#39;, family=&#39;arial&#39;, size=3.5) + annotate(&#39;text&#39;, x=3.4, y=0, label=&#39; New species&#39;, family=&#39;arial&#39;, size=3.5) #Plot circular tree circular_tree %&gt;% open_tree(30) %&gt;% rotate_tree(90) 4.1.2 Taxonomy overview tax_mag &lt;-genome_metadata %&gt;% group_by(phylum) %&gt;% summarise(mag_n=n()) tax_mag %&gt;% mutate(percetage_mag=round(mag_n*100/sum(mag_n), 2)) %&gt;% arrange(-percetage_mag) %&gt;% tt() .table td.tinytable_css_nxrb4ahvrqnkj4ezjqt5, .table th.tinytable_css_nxrb4ahvrqnkj4ezjqt5 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_flsl46if8canv4fffvmi, .table th.tinytable_css_flsl46if8canv4fffvmi { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } phylum mag_n percetage_mag p__Bacteroidota 191 35.44 p__Bacillota_A 175 32.47 p__Pseudomonadota 87 16.14 p__Bacillota 23 4.27 p__Verrucomicrobiota 18 3.34 p__Cyanobacteriota 12 2.23 p__Bacillota_C 11 2.04 p__Desulfobacterota 7 1.30 p__Fusobacteriota 6 1.11 p__Bacillota_B 4 0.74 p__Deferribacterota 2 0.37 p__Elusimicrobiota 2 0.37 p__Chlamydiota 1 0.19 4.1.3 Mag size (MB) genome_metadata &lt;-genome_metadata %&gt;% mutate(corrected_size=100*length/completeness) %&gt;% arrange(completeness) Mags average size (MB) genome_metadata %&gt;% summarise(Average_corrected_size=mean(corrected_size)) # A tibble: 1 × 1 Average_corrected_size &lt;dbl&gt; 1 3245297. 4.1.4 Genome quality genome_metadata %&gt;% summarise(completeness_mean=mean(completeness) %&gt;% round(2) %&gt;% as.character(), completeness_sd=sd(completeness) %&gt;% round(2) %&gt;% as.character(), contamination_mean=mean(contamination) %&gt;% round(2), contamination_sd=sd(contamination) %&gt;% round(2)) %&gt;% unite(&quot;Completeness&quot;,completeness_mean, completeness_sd, sep = &quot; ± &quot;, remove = TRUE) %&gt;% unite(&quot;Contamination&quot;,contamination_mean, contamination_sd, sep = &quot; ± &quot;, remove = TRUE) %&gt;% tt() .table td.tinytable_css_ngr0dr5glevd0fa4inc5, .table th.tinytable_css_ngr0dr5glevd0fa4inc5 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_fuu11ycgrlv3sfn2qaie, .table th.tinytable_css_fuu11ycgrlv3sfn2qaie { border-bottom: solid #d3d8dc 0.1em; } Completeness Contamination 85.01 ± 16.2 1.68 ± 2.25 #Generate quality biplot genome_biplot &lt;- genome_metadata %&gt;% select(c(genome,domain,phylum,completeness,contamination,length)) %&gt;% arrange(match(genome, rev(genome_tree$tip.label))) %&gt;% #sort MAGs according to phylogenetic tree ggplot(aes(x=completeness,y=contamination,size=length,color=phylum)) + geom_point(alpha=0.7) + ylim(c(10,0)) + scale_color_manual(values=phylum_colors) + labs(y= &quot;Contamination&quot;, x = &quot;Completeness&quot;) + theme_classic() + theme(legend.position = &quot;none&quot;) #Generate contamination boxplot genome_contamination &lt;- genome_metadata %&gt;% ggplot(aes(y=contamination)) + ylim(c(10,0)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0.40, 0),&quot;inches&quot;)) #add bottom-margin (top, right, bottom, left) #Generate completeness boxplot genome_completeness &lt;- genome_metadata %&gt;% ggplot(aes(x=completeness)) + xlim(c(50,100)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0, 0.50),&quot;inches&quot;)) #add left-margin (top, right, bottom, left) #Render composite figure grid.arrange(grobs = list(genome_completeness,genome_biplot,genome_contamination), layout_matrix = rbind(c(1,1,1,1,1,1,1,1,1,1,1,4), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3))) 4.1.5 Functional overview Predicted genes genome_annotations &lt;- read_tsv(&quot;data/gut/genome_annotations.tsv.xz&quot;) %&gt;% rename(gene=1, genome=2, contig=3) # Predicted genes pred_genes &lt;- genome_annotations %&gt;% nrow() cat(pred_genes) 1219667 Number of annotated genes and percentages # Some annotation genome_annota &lt;- genome_annotations %&gt;% filter(if_any(c(kegg_id, pfam_hits, cazy_hits), ~ !is.na(.))) %&gt;% nrow() cat(genome_annota) 942120 # Some annotation percentage genome_annota*100/pred_genes [1] 77.24403 Number of KEGG annotatated genes and percentages # KEGG annotation kegg_annota &lt;- genome_annotations %&gt;% filter(!is.na(kegg_id)) %&gt;% nrow() cat(kegg_annota) 557611 # KEGG annotation percentage kegg_annota*100/genome_annota [1] 59.18683 # Aggregate basal GIFT into elements function_table &lt;- genome_gifts %&gt;% to.elements(., GIFT_db) # Generate basal tree function_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% ggtree(., size = 0.3) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** #Add phylum colors next to the tree tips function_tree &lt;- gheatmap(function_tree, phylum_heatmap, offset=0, width=0.1, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + labs(fill=&quot;Phylum&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() #Add functions heatmap function_tree &lt;- gheatmap(function_tree, function_table, offset=0.5, width=3.5, colnames=FALSE) + vexpand(.08) + coord_cartesian(clip = &quot;off&quot;) + scale_fill_gradient(low = &quot;#f4f4f4&quot;, high = &quot;steelblue&quot;, na.value=&quot;white&quot;) + labs(fill=&quot;GIFT&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() # Add completeness barplots function_tree &lt;- function_tree + geom_fruit(data=genome_metadata, geom=geom_bar, grid.params=list(axis=&quot;x&quot;, text.size=2, nbreak = 1), axis.params=list(vline=TRUE), mapping = aes(x=length, y=genome, fill=completeness), offset = 3.8, orientation=&quot;y&quot;, stat=&quot;identity&quot;) + scale_fill_gradient(low = &quot;#cf8888&quot;, high = &quot;#a2cc87&quot;) + labs(fill=&quot;Genome\\ncompleteness&quot;) function_tree 4.1.6 Functional ordination # Generate the tSNE ordination tSNE_function &lt;- Rtsne(X=function_table, dims = 2, check_duplicates = FALSE) # Plot the ordination function_ordination &lt;- tSNE_function$Y %&gt;% as.data.frame() %&gt;% mutate(genome=rownames(function_table)) %&gt;% inner_join(genome_metadata, by=&quot;genome&quot;) %&gt;% rename(tSNE1=&quot;V1&quot;, tSNE2=&quot;V2&quot;) %&gt;% select(genome,phylum,tSNE1,tSNE2, length) %&gt;% ggplot(aes(x = tSNE1, y = tSNE2, color = phylum, size=length))+ geom_point(shape=16, alpha=0.7) + scale_color_manual(values=phylum_colors) + theme_minimal() + labs(color=&quot;Phylum&quot;, size=&quot;Genome size&quot;) + guides(color = guide_legend(override.aes = list(size = 5))) # enlarge Phylum dots in legend function_ordination 4.2 Skin microbiota load(&quot;data/skin/data.Rdata&quot;) genome_gifts &lt;- genome_gifts[, colSums(genome_gifts != 0) &gt; 0] 4.2.1 Genome phylogeny # Generate the phylum color heatmap phylum_heatmap &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(genome,phylum) %&gt;% mutate(phylum = factor(phylum, levels = unique(phylum))) %&gt;% column_to_rownames(var = &quot;genome&quot;) # Generate new species table newspecies_table &lt;- genome_metadata %&gt;% mutate(newspecies=ifelse(species==&quot;s__&quot;,&quot;Y&quot;,&quot;N&quot;)) %&gt;% select(genome,newspecies) %&gt;% column_to_rownames(var = &quot;genome&quot;) # Generate basal tree circular_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% # extend to ultrametric for the sake of visualisation ggtree(., layout=&quot;fan&quot;, open.angle=10, size=0.5) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** # Add phylum ring # circular_tree &lt;- gheatmap(circular_tree, phylum_heatmap, offset=0.55, width=0.1, colnames=FALSE) + # scale_fill_manual(values=phylum_colors) + # geom_tiplab2(size=1, hjust=-0.1) + # theme(legend.position = &quot;none&quot;, plot.margin = margin(0, 0, 0, 0), panel.margin = margin(0, 0, 0, 0)) circular_tree &lt;- gheatmap(circular_tree, phylum_heatmap, offset=0.05, width=0.05, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + labs(fill=&quot;Phylum&quot;) #theme(legend.position = &quot;none&quot;, plot.margin = margin(0, 0, 0, 0), panel.margin = margin(0, 0, 0, 0)) # Flush color scale to enable a new color scheme in the next ring circular_tree &lt;- circular_tree + new_scale_fill() # Add completeness ring circular_tree &lt;- circular_tree + new_scale_fill() + scale_fill_gradient(low = &quot;#d1f4ba&quot;, high = &quot;#f4baba&quot;) + geom_fruit( data=genome_metadata, geom=geom_bar, mapping = aes(x=completeness, y=genome, fill=contamination), offset = 0.24, pwidth = 0.1, orientation=&quot;y&quot;, stat=&quot;identity&quot;)+ labs(fill=&quot;Contamination&quot;) # Add genome-size ring circular_tree &lt;- circular_tree + new_scale_fill() circular_tree &lt;- gheatmap(circular_tree, newspecies_table, offset=0.3, width=0.05, colnames=FALSE) + scale_fill_manual(values=c(&quot;#f4f4f4&quot;,&quot;#74C8AE&quot;))+ labs(fill=&quot;New species&quot;) #theme(legend.position = &quot;none&quot;, plot.margin = margin(0, 0, 0, 0), panel.margin = margin(0, 0, 0, 0)) circular_tree &lt;- circular_tree + geom_fruit( data=genome_metadata, geom=geom_bar, mapping = aes(x=length, y=genome), fill = &quot;#1e6e55&quot;, offset = 0.05, orientation=&quot;y&quot;, stat=&quot;identity&quot;) # Add text circular_tree &lt;- circular_tree + annotate(&#39;text&#39;, x=2.2, y=0, label=&#39; Phylum&#39;, family=&#39;arial&#39;, size=3.5) + annotate(&#39;text&#39;, x=2.7, y=0, label=&#39; Genome quality&#39;, family=&#39;arial&#39;, size=3.5) + annotate(&#39;text&#39;, x=3.0, y=0, label=&#39; Genome size&#39;, family=&#39;arial&#39;, size=3.5) + annotate(&#39;text&#39;, x=2.5, y=0, label=&#39; New species&#39;, family=&#39;arial&#39;, size=3.5) #Plot circular tree circular_tree %&gt;% open_tree(30) %&gt;% rotate_tree(90) 4.2.2 Taxonomy overview genome_metadata %&gt;% group_by(phylum) %&gt;% summarise(mag_n=n()) %&gt;% arrange(-mag_n) %&gt;% tt() .table td.tinytable_css_sxn62mvt97hbzwey91mr, .table th.tinytable_css_sxn62mvt97hbzwey91mr { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_qza478ihfpezhiy7agp7, .table th.tinytable_css_qza478ihfpezhiy7agp7 { border-bottom: solid #d3d8dc 0.1em; } phylum mag_n p__Pseudomonadota 35 p__Bacteroidota 6 p__ 2 4.2.3 Genome quality genome_metadata %&gt;% summarise(completeness_mean=mean(completeness) %&gt;% round(2) %&gt;% as.character(), completeness_sd=sd(completeness) %&gt;% round(2) %&gt;% as.character(), contamination_mean=mean(contamination) %&gt;% round(2), contamination_sd=sd(contamination) %&gt;% round(2)) %&gt;% unite(&quot;Completeness&quot;,completeness_mean, completeness_sd, sep = &quot; ± &quot;, remove = TRUE) %&gt;% unite(&quot;Contamination&quot;,contamination_mean, contamination_sd, sep = &quot; ± &quot;, remove = TRUE) %&gt;% tt() .table td.tinytable_css_aezjcgfrfe5jxhzulsf3, .table th.tinytable_css_aezjcgfrfe5jxhzulsf3 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_7zmzug4k3u5endmn203s, .table th.tinytable_css_7zmzug4k3u5endmn203s { border-bottom: solid #d3d8dc 0.1em; } Completeness Contamination 77.24 ± 17.04 4.48 ± 2.42 #Generate quality biplot genome_biplot &lt;- genome_metadata %&gt;% select(c(genome,domain,phylum,completeness,contamination,length)) %&gt;% arrange(match(genome, rev(genome_tree$tip.label))) %&gt;% #sort MAGs according to phylogenetic tree ggplot(aes(x=completeness,y=contamination,size=length,color=phylum)) + geom_point(alpha=0.7) + ylim(c(10,0)) + scale_color_manual(values=phylum_colors) + labs(y= &quot;Contamination&quot;, x = &quot;Completeness&quot;) + theme_classic() + theme(legend.position = &quot;none&quot;) #Generate contamination boxplot genome_contamination &lt;- genome_metadata %&gt;% ggplot(aes(y=contamination)) + ylim(c(10,0)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0.40, 0),&quot;inches&quot;)) #add bottom-margin (top, right, bottom, left) #Generate completeness boxplot genome_completeness &lt;- genome_metadata %&gt;% ggplot(aes(x=completeness)) + xlim(c(50,100)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0, 0.50),&quot;inches&quot;)) #add left-margin (top, right, bottom, left) #Render composite figure grid.arrange(grobs = list(genome_completeness,genome_biplot,genome_contamination), layout_matrix = rbind(c(1,1,1,1,1,1,1,1,1,1,1,4), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3))) 4.2.4 Functional overview Predicted genes genome_annotations &lt;- read_tsv(&quot;data/skin/genome_annotations.tsv.xz&quot;) %&gt;% rename(gene=1, genome=2, contig=3) # Predicted genes pred_genes &lt;- genome_annotations %&gt;% nrow() cat(pred_genes) 114303 Number of annotated genes and percentages # Some annotation genome_annota &lt;- genome_annotations %&gt;% filter(if_any(c(kegg_id, pfam_hits, cazy_hits), ~ !is.na(.))) %&gt;% nrow() cat(genome_annota) 88006 # Some annotation percentage genome_annota*100/pred_genes [1] 76.9936 Number of KEGG annotatated genes and percentages # KEGG annotation kegg_annota &lt;- genome_annotations %&gt;% filter(!is.na(kegg_id)) %&gt;% nrow() cat(kegg_annota) 52991 # KEGG annotation percentage kegg_annota*100/genome_annota [1] 60.21294 # Aggregate basal GIFT into elements function_table &lt;- genome_gifts %&gt;% to.elements(., GIFT_db) # Generate basal tree function_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% ggtree(., size = 0.3) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** #Add phylum colors next to the tree tips function_tree &lt;- gheatmap(function_tree, phylum_heatmap, offset=0, width=0.1, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + labs(fill=&quot;Phylum&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() #Add functions heatmap function_tree &lt;- gheatmap(function_tree, function_table, offset=0.5, width=3.5, colnames=FALSE) + vexpand(.08) + coord_cartesian(clip = &quot;off&quot;) + scale_fill_gradient(low = &quot;#f4f4f4&quot;, high = &quot;steelblue&quot;, na.value=&quot;white&quot;) + labs(fill=&quot;GIFT&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() # Add completeness barplots function_tree &lt;- function_tree + geom_fruit(data=genome_metadata, geom=geom_bar, grid.params=list(axis=&quot;x&quot;, text.size=2, nbreak = 1), axis.params=list(vline=TRUE), mapping = aes(x=length, y=genome, fill=completeness), offset = 3.8, orientation=&quot;y&quot;, stat=&quot;identity&quot;) + scale_fill_gradient(low = &quot;#cf8888&quot;, high = &quot;#a2cc87&quot;) + labs(fill=&quot;Genome\\ncompleteness&quot;) function_tree 4.2.5 Functional ordination # Generate the tSNE ordination tSNE_function &lt;- Rtsne(X=function_table, dims = 2, perplexity = 10, check_duplicates = FALSE) # Plot the ordination function_ordination &lt;- tSNE_function$Y %&gt;% as.data.frame() %&gt;% mutate(genome=rownames(function_table)) %&gt;% inner_join(genome_metadata, by=&quot;genome&quot;) %&gt;% rename(tSNE1=&quot;V1&quot;, tSNE2=&quot;V2&quot;) %&gt;% select(genome,phylum,tSNE1,tSNE2, length) %&gt;% ggplot(aes(x = tSNE1, y = tSNE2, color = phylum, size=length))+ geom_point(shape=16, alpha=0.7) + scale_color_manual(values=phylum_colors) + theme_minimal() + labs(color=&quot;Phylum&quot;, size=&quot;Genome size&quot;) + guides(color = guide_legend(override.aes = list(size = 5))) # enlarge Phylum dots in legend function_ordination # Generate the tSNE ordination tSNE_function &lt;- Rtsne(X=function_table, dims = 2, perplexity = 13, check_duplicates = FALSE) # Plot the ordination function_ordination &lt;- tSNE_function$Y %&gt;% as.data.frame() %&gt;% mutate(genome=rownames(function_table)) %&gt;% inner_join(genome_metadata, by=&quot;genome&quot;) %&gt;% rename(tSNE1=&quot;V1&quot;, tSNE2=&quot;V2&quot;) %&gt;% select(genome,phylum,tSNE1,tSNE2, length) %&gt;% ggplot(aes(x = tSNE1, y = tSNE2, color = phylum, size=length))+ geom_point(shape=16, alpha=0.7) + scale_color_manual(values=phylum_colors) + theme_minimal() + labs(color=&quot;Phylum&quot;, size=&quot;Genome size&quot;) + guides(color = guide_legend(override.aes = list(size = 5))) # enlarge Phylum dots in legend function_ordination 4.2.6 Combined ordination load(&quot;data/gut/data.Rdata&quot;) function_table_gut &lt;- genome_gifts_raw %&gt;% to.elements(., GIFT_db) %&gt;% data.frame() genome_metadata_gut&lt;- genome_metadata load(&quot;data/skin/data.Rdata&quot;) function_table_skin &lt;- genome_gifts %&gt;% to.elements(., GIFT_db) %&gt;% data.frame() genome_metadata_skin&lt;- genome_metadata function_table &lt;- bind_rows(function_table_gut,function_table_skin) tSNE_function &lt;- function_table %&gt;% Rtsne(X=., dims = 2, check_duplicates = FALSE) genome_metadata &lt;- bind_rows(genome_metadata_gut %&gt;% mutate(type=&quot;gut&quot;),genome_metadata_skin %&gt;% mutate(type=&quot;skin&quot;)) phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% pull(colors, name=phylum) tSNE_function$Y %&gt;% as.data.frame() %&gt;% mutate(genome=rownames(function_table)) %&gt;% inner_join(genome_metadata, by=&quot;genome&quot;) %&gt;% rename(tSNE1=&quot;V1&quot;, tSNE2=&quot;V2&quot;) %&gt;% select(genome,phylum,tSNE1,tSNE2, length, type) %&gt;% ggplot(aes(x = tSNE1, y = tSNE2, color = phylum, size=length, shape=type))+ geom_point(alpha=0.7) + scale_color_manual(values=phylum_colors) + theme_minimal() + labs(color=&quot;Phylum&quot;, size=&quot;Genome size&quot;) + guides(color = guide_legend(override.aes = list(size = 5))) "],["community-composition.html", "Chapter 5 Community composition 5.1 Gut microbiota 5.2 Skin microbiota", " Chapter 5 Community composition 5.1 Gut microbiota load(&quot;data/gut/data.Rdata&quot;) 5.1.1 Taxonomy overview 5.1.1.1 Phylum level genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% #append sample metadata filter(count &gt; 0) %&gt;% #filter 0 counts ggplot(., aes(x=sample,y=count, fill=phylum, group=phylum)) + #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1) + #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + facet_nested(~factor(environment, labels=c(&quot;low&quot; = &quot;Low altitude&quot;, &quot;high&quot; = &quot;High altitude&quot;)), scales=&quot;free&quot;) + #facet per day and treatment guides(fill = guide_legend(ncol = 1)) + theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(), panel.background = element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), strip.background = element_rect(fill = &quot;white&quot;), strip.text = element_text(size = 12, lineheight = 0.6,face=&quot;bold&quot;), axis.line = element_line(linewidth = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;)) + labs(fill=&quot;Phylum&quot;,y = &quot;Relative abundance&quot;,x=&quot;Samples&quot;) Number of MAGs 539 Number of bacteria phyla 13 Number of Archaea phyla 0 Phylum relative abundances phylum_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% group_by(sample,phylum,river, environment) %&gt;% summarise(relabun=sum(count)) phylum_summary %&gt;% group_by(phylum) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T), High_mean=mean(relabun[environment==&quot;high&quot;]*100, na.rm=T), High_sd=sd(relabun[environment==&quot;high&quot;]*100, na.rm=T), Low_mean=mean(relabun[environment==&quot;low&quot;]*100, na.rm=T), Low_sd=sd(relabun[environment==&quot;low&quot;]*100, na.rm=T)) %&gt;% mutate(Total=str_c(round(total_mean,3),&quot;±&quot;,round(total_sd,3)), High=str_c(round(High_mean,3),&quot;±&quot;,round(High_sd,3)), Low=str_c(round(Low_mean,3),&quot;±&quot;,round(Low_sd,3))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(phylum,Total,High,Low) # A tibble: 13 × 4 phylum Total High Low &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 p__Bacteroidota 56.017±16.856 57.802±15.145 54.344±18.655 2 p__Bacillota_A 17.723±6.394 16.389±6.41 18.973±6.322 3 p__Pseudomonadota 11.568±13.498 8.774±7.907 14.187±17.056 4 p__Bacillota 5.475±8.813 6.263±12.015 4.736±4.405 5 p__Verrucomicrobiota 4.116±4.507 4.218±4.909 4.02±4.256 6 p__Desulfobacterota 1.795±1.741 1.747±1.616 1.839±1.902 7 p__Fusobacteriota 1.369±2.181 2.692±2.505 0.128±0.513 8 p__Bacillota_C 0.653±0.926 0.426±0.37 0.865±1.22 9 p__Deferribacterota 0.602±0.769 0.923±0.952 0.3±0.369 10 p__Cyanobacteriota 0.37±0.498 0.36±0.511 0.379±0.503 11 p__Bacillota_B 0.155±0.141 0.191±0.143 0.12±0.134 12 p__Elusimicrobiota 0.126±0.428 0.199±0.59 0.058±0.175 13 p__Chlamydiota 0.033±0.084 0.015±0.039 0.049±0.11 phylum_arrange &lt;- phylum_summary %&gt;% group_by(phylum) %&gt;% summarise(mean=sum(relabun)) %&gt;% arrange(-mean) %&gt;% select(phylum) %&gt;% pull() phylum_summary %&gt;% left_join(genome_metadata %&gt;% select(phylum,phylum) %&gt;% unique(),by=join_by(phylum==phylum)) %&gt;% # left_join(sample_metadata,by=join_by(sample==sample)) %&gt;% filter(phylum %in% phylum_arrange[1:20]) %&gt;% mutate(phylum=factor(phylum,levels=rev(phylum_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=phylum, group=phylum, color=phylum)) + scale_color_manual(values=phylum_colors[-8]) + geom_jitter(alpha=0.5) + facet_grid(.~environment)+ theme_minimal() + labs(y=&quot;phylum&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) Bacteria phyla in individuals from low altitude 13 Bacteria phyla in individuals from high altitude 13 phylum_summary %&gt;% group_by(phylum) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T), le_mean=mean(relabun[river==&quot;Leitzaran&quot;]*100, na.rm=T), le_sd=sd(relabun[river==&quot;Leitzaran&quot;]*100, na.rm=T), ha_mean=mean(relabun[river==&quot;Harpea&quot;]*100, na.rm=T), ha_sd=sd(relabun[river==&quot;Harpea&quot;]*100, na.rm=T), er_mean=mean(relabun[river==&quot;Erlan&quot;]*100, na.rm=T), er_sd=sd(relabun[river==&quot;Erlan&quot;]*100, na.rm=T), go_mean=mean(relabun[river==&quot;Goizueta&quot;]*100, na.rm=T), go_sd=sd(relabun[river==&quot;Goizueta&quot;]*100, na.rm=T)) %&gt;% mutate(Total=str_c(round(total_mean,3),&quot;±&quot;,round(total_sd,3)), Leitzaran=str_c(round(le_mean,3),&quot;±&quot;,round(le_sd,3)), Harpea=str_c(round(ha_mean,3),&quot;±&quot;,round(ha_sd,3)), Erlan=str_c(round(er_mean,3),&quot;±&quot;,round(er_sd,3)), Goizueta=str_c(round(go_mean,3),&quot;±&quot;,round(go_sd,3))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(phylum,Total,Leitzaran,Goizueta,Harpea,Erlan) # A tibble: 13 × 6 phylum Total Leitzaran Goizueta Harpea Erlan &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 p__Bacteroidota 56.017±16.856 60.117±14.174 49.855±21.212 56.148±20.609 59.249±9.464 2 p__Bacillota_A 17.723±6.394 19.382±7.428 18.654±5.77 16.773±5.991 16.053±7.151 3 p__Pseudomonadota 11.568±13.498 12.81±9.399 15.259±21.823 7.394±8.916 9.981±7.303 4 p__Bacillota 5.475±8.813 3.368±2.906 5.8±5.209 10.8±16.871 2.293±2.479 5 p__Verrucomicrobiota 4.116±4.507 2.429±3.463 5.257±4.586 1.69±1.837 6.431±5.773 6 p__Desulfobacterota 1.795±1.741 0.907±1.033 2.565±2.152 1.919±2.224 1.597±0.966 7 p__Fusobacteriota 1.369±2.181 0.293±0.775 0±0 3.777±2.857 1.743±1.828 8 p__Bacillota_C 0.653±0.926 0.278±0.324 1.322±1.475 0.321±0.194 0.519±0.469 9 p__Deferribacterota 0.602±0.769 0.175±0.305 0.397±0.402 0.684±0.385 1.132±1.257 10 p__Cyanobacteriota 0.37±0.498 0.095±0.215 0.601±0.559 0.264±0.461 0.444±0.569 11 p__Bacillota_B 0.155±0.141 0.146±0.154 0.1±0.121 0.199±0.128 0.184±0.162 12 p__Elusimicrobiota 0.126±0.428 0±0 0.102±0.228 0±0 0.374±0.789 13 p__Chlamydiota 0.033±0.084 0±0 0.088±0.138 0.031±0.054 0±0 5.1.1.2 Family level Percentange of families in each group family_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% #append sample metadata left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample,family, river,environment) %&gt;% summarise(relabun=sum(count)) family_summary %&gt;% group_by(family) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T), High_mean=mean(relabun[environment==&quot;high&quot;]*100, na.rm=T), High_sd=sd(relabun[environment==&quot;high&quot;]*100, na.rm=T), Low_mean=mean(relabun[environment==&quot;low&quot;]*100, na.rm=T), Low_sd=sd(relabun[environment==&quot;low&quot;]*100, na.rm=T)) %&gt;% mutate(Total=str_c(round(total_mean,3),&quot;±&quot;,round(total_sd,3)), High=str_c(round(High_mean,3),&quot;±&quot;,round(High_sd,3)), Low=str_c(round(Low_mean,3),&quot;±&quot;,round(Low_sd,3))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(family,Total,High,Low) # A tibble: 59 × 4 family Total High Low &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 f__Bacteroidaceae 27.472±14.072 26.66±11.936 28.232±16.18 2 f__Rikenellaceae 13.92±7.397 18.443±4.375 9.679±7.206 3 f__Tannerellaceae 7.721±4.561 5.819±2.671 9.504±5.286 4 f__Ruminococcaceae 5.794±4.189 6.941±3.771 4.718±4.391 5 f__Lachnospiraceae 4.729±3.338 3.083±2.906 6.272±3.025 6 f__Enterobacteriaceae 4.336±9.482 2.673±4.547 5.896±12.456 7 f__Akkermansiaceae 3.968±4.368 4.044±4.731 3.897±4.155 8 f__Marinifilaceae 3.739±3.555 2.958±1.959 4.471±4.529 9 f__Aeromonadaceae 3.216±5.116 1.775±2.855 4.567±6.381 10 f__Mycoplasmoidaceae 3.122±8.895 4.384±12.189 1.939±4.062 # ℹ 49 more rows family_arrange &lt;- family_summary %&gt;% group_by(family) %&gt;% summarise(mean=sum(relabun)) %&gt;% arrange(-mean) %&gt;% select(family) %&gt;% pull() # Per environment family_summary %&gt;% left_join(genome_metadata %&gt;% select(family,phylum) %&gt;% unique(),by=join_by(family==family)) %&gt;% filter(family %in% family_arrange[1:20]) %&gt;% mutate(family=factor(family,levels=rev(family_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=family, group=family, color=phylum)) + scale_color_manual(values=phylum_colors[-8]) + geom_jitter(alpha=0.5) + facet_grid(.~environment)+ theme_minimal() + labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) family_summary %&gt;% group_by(family) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T), le_mean=mean(relabun[river==&quot;Leitzaran&quot;]*100, na.rm=T), le_sd=sd(relabun[river==&quot;Leitzaran&quot;]*100, na.rm=T), ha_mean=mean(relabun[river==&quot;Harpea&quot;]*100, na.rm=T), ha_sd=sd(relabun[river==&quot;Harpea&quot;]*100, na.rm=T), er_mean=mean(relabun[river==&quot;Erlan&quot;]*100, na.rm=T), er_sd=sd(relabun[river==&quot;Erlan&quot;]*100, na.rm=T), go_mean=mean(relabun[river==&quot;Goizueta&quot;]*100, na.rm=T), go_sd=sd(relabun[river==&quot;Goizueta&quot;]*100, na.rm=T)) %&gt;% mutate(Total=str_c(round(total_mean,3),&quot;±&quot;,round(total_sd,3)), Leitzaran=str_c(round(le_mean,3),&quot;±&quot;,round(le_sd,3)), Harpea=str_c(round(ha_mean,3),&quot;±&quot;,round(ha_sd,3)), Erlan=str_c(round(er_mean,3),&quot;±&quot;,round(er_sd,3)), Goizueta=str_c(round(go_mean,3),&quot;±&quot;,round(go_sd,3))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(family,Total,Leitzaran,Goizueta,Harpea,Erlan) # A tibble: 59 × 6 family Total Leitzaran Goizueta Harpea Erlan &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 f__Bacteroidaceae 27.472±14.072 34.786±20.422 23.135±10.548 27.17±12.675 26.215±12.113 2 f__Rikenellaceae 13.92±7.397 8.911±9.05 10.277±5.916 17.11±5.122 19.609±3.531 3 f__Tannerellaceae 7.721±4.561 9.923±5.108 9.177±5.705 5.979±2.836 5.679±2.706 4 f__Ruminococcaceae 5.794±4.189 4.235±4.644 5.094±4.428 6.708±3.914 7.146±3.9 5 f__Lachnospiraceae 4.729±3.338 5.815±2.118 6.629±3.671 2.699±1.253 3.419±3.907 6 f__Enterobacteriaceae 4.336±9.482 4.222±2.926 7.198±16.738 2.824±5.913 2.54±3.368 7 f__Akkermansiaceae 3.968±4.368 2.429±3.463 5.04±4.475 1.69±1.837 6.104±5.61 8 f__Marinifilaceae 3.739±3.555 4.765±6.475 4.243±2.624 2.306±1.732 3.528±2.075 9 f__Aeromonadaceae 3.216±5.116 6.023±7.391 3.435±5.664 0.515±0.676 2.878±3.597 10 f__Mycoplasmoidaceae 3.122±8.895 1.267±2.044 2.462±5.207 8.878±17.359 0.452±0.999 # ℹ 49 more rows 5.1.1.3 Genus level *** Percetange of genera in each group*** genus_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% #append sample metadata left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample,phylum,genus, environment) %&gt;% summarise(relabun=sum(count)) # %&gt;% # filter(genus != &quot;g__&quot;) %&gt;% # mutate(genus= sub(&quot;^g__&quot;, &quot;&quot;, genus)) genus_summary %&gt;% group_by(genus) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T), High_mean=mean(relabun[environment==&quot;high&quot;]*100, na.rm=T), High_sd=sd(relabun[environment==&quot;high&quot;]*100, na.rm=T), Low_mean=mean(relabun[environment==&quot;low&quot;]*100, na.rm=T), Low_sd=sd(relabun[environment==&quot;low&quot;]*100, na.rm=T)) %&gt;% mutate(Total=str_c(round(total_mean,3),&quot;±&quot;,round(total_sd,3)), High=str_c(round(High_mean,3),&quot;±&quot;,round(High_sd,3)), Low=str_c(round(Low_mean,3),&quot;±&quot;,round(Low_sd,3))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(genus,Total,High,Low) # A tibble: 112 × 4 genus Total High Low &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 g__Bacteroides 26.763±13.992 26.077±11.54 27.407±16.32 2 g__Parabacteroides 6.376±3.96 4.975±2.577 7.69±4.622 3 g__Mucinivorans 6.085±4.345 8.178±3.614 4.123±4.132 4 g__Aeromonas 3.216±5.116 1.775±2.855 4.567±6.381 5 g__Mycoplasma_L 2.603±8.972 4.309±12.215 1.003±4.012 6 g__Akkermansia 2.441±3.614 2.187±4.075 2.678±3.241 7 g__Odoribacter 2.389±2.236 1.859±1.22 2.886±2.84 8 g__JADFUS01 2.217±1.317 2.721±1.198 1.744±1.279 9 g__Hafnia 1.923±9.189 0.09±0.147 3.641±12.741 10 g__UBA866 1.817±2.179 1.759±1.596 1.871±2.668 # ℹ 102 more rows genus_summary_sort &lt;- genus_summary %&gt;% group_by(genus) %&gt;% summarise(mean=mean(relabun, na.rm=T),sd=sd(relabun, na.rm=T)) %&gt;% arrange(-mean) genus_summary %&gt;% mutate(genus=factor(genus, levels=rev(genus_summary_sort %&gt;% pull(genus)))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=genus, group=genus, color=phylum)) + scale_color_manual(values=phylum_colors) + geom_jitter(alpha=0.5) + facet_grid(.~environment)+ theme_minimal() + theme(axis.text.y = element_text(size=6))+ labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) Number of MAGs without genera-level annotation 133 .table td.tinytable_css_ox54aitwi8tkytb4vefm, .table th.tinytable_css_ox54aitwi8tkytb4vefm { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_06nz0yqn29bxc5he7ggj, .table th.tinytable_css_06nz0yqn29bxc5he7ggj { border-bottom: solid #d3d8dc 0.1em; } phylum count_nogene count_total percentage p__Bacillota 4 23 17.39130 p__Bacillota_A 45 175 25.71429 p__Bacillota_B 3 4 75.00000 p__Bacillota_C 11 11 100.00000 p__Bacteroidota 24 191 12.56545 p__Chlamydiota 1 1 100.00000 p__Cyanobacteriota 7 12 58.33333 p__Deferribacterota 2 2 100.00000 p__Desulfobacterota 4 7 57.14286 p__Elusimicrobiota 1 2 50.00000 p__Pseudomonadota 18 87 20.68966 p__Verrucomicrobiota 13 18 72.22222 Percentage of MAGs without genus-level annotation 24.67532 Number of MAGs without species-level annotation # A tibble: 1 × 1 Mag_nospecies &lt;int&gt; 1 494 .table td.tinytable_css_i8k0oxva3lh84jdd84p5, .table th.tinytable_css_i8k0oxva3lh84jdd84p5 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_fwcr385jxnwf3sqlhtji, .table th.tinytable_css_fwcr385jxnwf3sqlhtji { border-bottom: solid #d3d8dc 0.1em; } phylum count_nospecies count_total species_annotated percentage percentage_species p__Bacillota 22 23 1 95.65217 4.347826 p__Bacillota_A 175 175 0 100.00000 0.000000 p__Bacillota_B 4 4 0 100.00000 0.000000 p__Bacillota_C 11 11 0 100.00000 0.000000 p__Bacteroidota 191 191 0 100.00000 0.000000 p__Chlamydiota 1 1 0 100.00000 0.000000 p__Cyanobacteriota 12 12 0 100.00000 0.000000 p__Deferribacterota 2 2 0 100.00000 0.000000 p__Desulfobacterota 7 7 0 100.00000 0.000000 p__Elusimicrobiota 2 2 0 100.00000 0.000000 p__Fusobacteriota 4 6 2 66.66667 33.333333 p__Pseudomonadota 45 87 42 51.72414 48.275862 p__Verrucomicrobiota 18 18 0 100.00000 0.000000 Percentage of MAGs without species-level annotation 91.65121 5.2 Skin microbiota load(&quot;data/skin/data.Rdata&quot;) 5.2.1 Taxonomy overview 5.2.1.1 Phylum level genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% #append sample metadata filter(count &gt; 0) %&gt;% #filter 0 counts ggplot(., aes(x=sample,y=count, fill=phylum, group=phylum)) + #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1) + #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + facet_nested(~factor(environment, labels=c(&quot;low&quot; = &quot;Low altitude&quot;, &quot;high&quot; = &quot;High altitude&quot;)), scales=&quot;free&quot;) + #facet per day and treatment guides(fill = guide_legend(ncol = 1)) + theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.ticks.x = element_blank(), axis.title.x = element_blank(), panel.background = element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), strip.background = element_rect(fill = &quot;white&quot;), strip.text = element_text(size = 12, lineheight = 0.6,face=&quot;bold&quot;), axis.line = element_line(linewidth = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;)) + labs(fill=&quot;Phylum&quot;,y = &quot;Relative abundance&quot;,x=&quot;Samples&quot;) Number of MAGs 43 Number of bacteria phyla 3 Number of Archaea phyla 0 Phylum relative abundances phylum_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% group_by(sample,phylum, environment, river) %&gt;% summarise(relabun=sum(count)) phylum_summary %&gt;% group_by(phylum) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T), High_mean=mean(relabun[environment==&quot;high&quot;]*100, na.rm=T), High_sd=sd(relabun[environment==&quot;high&quot;]*100, na.rm=T), Low_mean=mean(relabun[environment==&quot;low&quot;]*100, na.rm=T), Low_sd=sd(relabun[environment==&quot;low&quot;]*100, na.rm=T)) %&gt;% mutate(Total=str_c(round(total_mean,3),&quot;±&quot;,round(total_sd,3)), High=str_c(round(High_mean,3),&quot;±&quot;,round(High_sd,3)), Low=str_c(round(Low_mean,6),&quot;±&quot;,round(Low_sd,3))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(phylum,Total,High,Low) # A tibble: 3 × 4 phylum Total High Low &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 p__Pseudomonadota 84.888±15.792 88.597±8.902 82.415673±18.92 2 p__Bacteroidota 14.869±15.806 10.797±8.675 17.584327±18.92 3 p__ 0.242±1.198 0.606±1.882 0±0 phylum_arrange &lt;- phylum_summary %&gt;% group_by(phylum) %&gt;% summarise(mean=sum(relabun)) %&gt;% arrange(-mean) %&gt;% select(phylum) %&gt;% pull() phylum_summary %&gt;% left_join(genome_metadata %&gt;% select(phylum,phylum) %&gt;% unique(),by=join_by(phylum==phylum)) %&gt;% # left_join(sample_metadata,by=join_by(sample==sample)) %&gt;% filter(phylum %in% phylum_arrange[1:20]) %&gt;% mutate(phylum=factor(phylum,levels=rev(phylum_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=phylum, group=phylum, color=phylum)) + scale_color_manual(values=phylum_colors[-8]) + geom_jitter(alpha=0.5) + facet_grid(.~environment)+ theme_minimal() + labs(y=&quot;phylum&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) Bacteria phyla in individuals from low altitude [1] 2 Bacteria phyla in individuals from high altitude [1] 3 phylum_summary %&gt;% group_by(phylum) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T), le_mean=mean(relabun[river==&quot;Leitzaran&quot;]*100, na.rm=T), le_sd=sd(relabun[river==&quot;Leitzaran&quot;]*100, na.rm=T), ha_mean=mean(relabun[river==&quot;Harpea&quot;]*100, na.rm=T), ha_sd=sd(relabun[river==&quot;Harpea&quot;]*100, na.rm=T), er_mean=mean(relabun[river==&quot;Erlan&quot;]*100, na.rm=T), er_sd=sd(relabun[river==&quot;Erlan&quot;]*100, na.rm=T), go_mean=mean(relabun[river==&quot;Goizueta&quot;]*100, na.rm=T), go_sd=sd(relabun[river==&quot;Goizueta&quot;]*100, na.rm=T)) %&gt;% mutate(Total=str_c(round(total_mean,3),&quot;±&quot;,round(total_sd,3)), Leitzaran=str_c(round(le_mean,6),&quot;±&quot;,round(le_sd,3)), Harpea=str_c(round(ha_mean,6),&quot;±&quot;,round(ha_sd,3)), Erlan=str_c(round(er_mean,6),&quot;±&quot;,round(er_sd,3)), Goizueta=str_c(round(go_mean,6),&quot;±&quot;,round(go_sd,3))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(phylum,Total,Leitzaran,Goizueta,Harpea,Erlan) # A tibble: 3 × 6 phylum Total Leitzaran Goizueta Harpea Erlan &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 p__Pseudomonadota 84.888±15.792 79.00655±24.425 85.824795±11.744 92.755803±3.456 86.517677±10.227 2 p__Bacteroidota 14.869±15.806 20.99345±24.425 14.175205±11.744 7.244197±3.456 12.573272±10.116 3 p__ 0.242±1.198 0±0 0±0 0±0 0.909051±2.292 5.2.1.2 Family level Percentange of families in each group family_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% #append sample metadata left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample,family, river,environment) %&gt;% summarise(relabun=sum(count)) family_summary %&gt;% group_by(family) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T), High_mean=mean(relabun[environment==&quot;high&quot;]*100, na.rm=T), High_sd=sd(relabun[environment==&quot;high&quot;]*100, na.rm=T), Low_mean=mean(relabun[environment==&quot;low&quot;]*100, na.rm=T), Low_sd=sd(relabun[environment==&quot;low&quot;]*100, na.rm=T)) %&gt;% mutate(Total=str_c(round(total_mean,3),&quot;±&quot;,round(total_sd,3)), High=str_c(round(High_mean,3),&quot;±&quot;,round(High_sd,3)), Low=str_c(round(Low_mean,3),&quot;±&quot;,round(Low_sd,3))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(family,Total,High,Low) # A tibble: 14 × 4 family Total High Low &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 f__Methylophilaceae 29.667±26.384 48.878±23.032 16.86±20.25 2 f__Burkholderiaceae_B 27.235±24.427 18.967±12.87 32.747±28.814 3 f__Pseudomonadaceae 17.505±22.204 12.039±14.84 21.149±25.756 4 f__Spirosomaceae 13.217±15.853 7.659±6.105 16.923±19.189 5 f__Moraxellaceae 3.763±9.946 5.429±14.848 2.652±4.779 6 f__Burkholderiaceae 2.468±5.746 0.498±1.071 3.781±7.142 7 f__Burkholderiaceae_A 1.898±6.249 0.153±0.531 3.061±7.928 8 f__Sphingomonadaceae 1.403±4.051 1.256±1.956 1.5±5.049 9 f__Flavobacteriaceae 1.282±4.516 3.138±6.889 0.044±0.188 10 f__Alteromonadaceae 0.671±1.439 0.981±1.532 0.465±1.378 11 f__Weeksellaceae 0.37±2.028 0±0 0.617±2.618 12 f__ 0.242±1.198 0.606±1.882 0±0 13 f__UBA6184 0.158±0.866 0.395±1.37 0±0 14 f__Rhodocyclaceae 0.12±0.462 0±0 0.2±0.59 family_arrange &lt;- family_summary %&gt;% group_by(family) %&gt;% summarise(mean=sum(relabun)) %&gt;% arrange(-mean) %&gt;% select(family) %&gt;% pull() # Per environment family_summary %&gt;% left_join(genome_metadata %&gt;% select(family,phylum) %&gt;% unique(),by=join_by(family==family)) %&gt;% filter(family %in% family_arrange[1:20]) %&gt;% mutate(family=factor(family,levels=rev(family_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=family, group=family, color=phylum)) + scale_color_manual(values=phylum_colors[-8]) + geom_jitter(alpha=0.5) + facet_grid(.~environment)+ theme_minimal() + labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) family_summary %&gt;% group_by(family) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T), le_mean=mean(relabun[river==&quot;Leitzaran&quot;]*100, na.rm=T), le_sd=sd(relabun[river==&quot;Leitzaran&quot;]*100, na.rm=T), ha_mean=mean(relabun[river==&quot;Harpea&quot;]*100, na.rm=T), ha_sd=sd(relabun[river==&quot;Harpea&quot;]*100, na.rm=T), er_mean=mean(relabun[river==&quot;Erlan&quot;]*100, na.rm=T), er_sd=sd(relabun[river==&quot;Erlan&quot;]*100, na.rm=T), go_mean=mean(relabun[river==&quot;Goizueta&quot;]*100, na.rm=T), go_sd=sd(relabun[river==&quot;Goizueta&quot;]*100, na.rm=T)) %&gt;% mutate(Total=str_c(round(total_mean,3),&quot;±&quot;,round(total_sd,3)), Leitzaran=str_c(round(le_mean,3),&quot;±&quot;,round(le_sd,3)), Harpea=str_c(round(ha_mean,3),&quot;±&quot;,round(ha_sd,3)), Erlan=str_c(round(er_mean,3),&quot;±&quot;,round(er_sd,3)), Goizueta=str_c(round(go_mean,3),&quot;±&quot;,round(go_sd,3))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(family,Total,Leitzaran,Goizueta,Harpea,Erlan) # A tibble: 14 × 6 family Total Leitzaran Goizueta Harpea Erlan &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 f__Methylophilaceae 29.667±26.384 12.119±9.771 21.601±26.932 38.61±29.001 54.012±19.565 2 f__Burkholderiaceae_B 27.235±24.427 43.95±28.971 21.545±25.349 12.11±8.23 22.396±13.818 3 f__Pseudomonadaceae 17.505±22.204 17.201±21.401 25.097±30.276 24.43±19.778 5.843±6.843 4 f__Spirosomaceae 13.217±15.853 20.993±24.425 12.853±12.192 6.742±4.094 8.117±7.118 5 f__Moraxellaceae 3.763±9.946 2.005±4.134 3.298±5.524 14.552±25.274 0.868±1.166 6 f__Burkholderiaceae 2.468±5.746 0.238±0.715 7.324±8.924 0.795±1.59 0.349±0.803 7 f__Burkholderiaceae_A 1.898±6.249 2.562±6.41 3.559±9.588 0±0 0.23±0.65 8 f__Sphingomonadaceae 1.403±4.051 0±0 3.001±7.007 0±0 1.884±2.159 9 f__Flavobacteriaceae 1.282±4.516 0±0 0.088±0.265 0.503±1.005 4.456±8.258 10 f__Alteromonadaceae 0.671±1.439 0.93±1.884 0±0 2.259±2.212 0.342±0.439 11 f__Weeksellaceae 0.37±2.028 0±0 1.234±3.703 0±0 0±0 12 f__ 0.242±1.198 0±0 0±0 0±0 0.909±2.292 13 f__UBA6184 0.158±0.866 0±0 0±0 0±0 0.593±1.678 14 f__Rhodocyclaceae 0.12±0.462 0±0 0.4±0.806 0±0 0±0 5.2.1.3 Genus level genus_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% #append sample metadata left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample,phylum,genus, environment) %&gt;% summarise(relabun=sum(count)) # %&gt;% # filter(genus != &quot;g__&quot;) %&gt;% # mutate(genus= sub(&quot;^g__&quot;, &quot;&quot;, genus)) genus_summary %&gt;% group_by(genus) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T), High_mean=mean(relabun[environment==&quot;high&quot;]*100, na.rm=T), High_sd=sd(relabun[environment==&quot;high&quot;]*100, na.rm=T), Low_mean=mean(relabun[environment==&quot;low&quot;]*100, na.rm=T), Low_sd=sd(relabun[environment==&quot;low&quot;]*100, na.rm=T)) %&gt;% mutate(Total=str_c(round(total_mean,3),&quot;±&quot;,round(total_sd,3)), High=str_c(round(High_mean,3),&quot;±&quot;,round(High_sd,3)), Low=str_c(round(Low_mean,3),&quot;±&quot;,round(Low_sd,3))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(genus,Total,High,Low) %&gt;% tt() .table td.tinytable_css_d6xw6rh3b7mzppsxzg2w, .table th.tinytable_css_d6xw6rh3b7mzppsxzg2w { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_6xoi5dtwh5y0bobgtyo7, .table th.tinytable_css_6xoi5dtwh5y0bobgtyo7 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } genus Total High Low g__Methylotenera 17.548±22.587 37.152±23.413 4.479±7.969 g__Pseudomonas_E 17.505±22.204 12.039±14.84 21.149±25.756 g__Rhodoferax_C 15.176±22.446 6.546±5.573 20.929±27.417 g__Methylophilus 10.821±17.174 10.294±8.855 11.172±21.263 g__Arcicella 7.66±9.217 6.484±6.555 8.443±10.746 g__JALRIJ01 5.558±12.997 1.174±2.749 8.48±16.145 g__Ideonella 4.853±8.717 8.171±10.782 2.641±6.439 g__Acinetobacter 3.763±9.946 5.429±14.848 2.652±4.779 g__Paucibacter_A 3.522±7.505 2.982±2.89 3.881±9.504 g__JADJBS01 2.974±12.106 0±0 4.956±15.479 g__JAEZVV01 1.898±6.249 0.153±0.531 3.061±7.928 g__Telluria 1.495±5.285 0.233±0.663 2.336±6.745 g__Flavobacterium 1.282±4.516 3.138±6.889 0.044±0.188 g__Sphingobium 1.066±3.922 0.415±0.626 1.5±5.049 g__Undibacterium 0.973±2.645 0.265±0.918 1.445±3.287 g__ 0.77±1.988 1.019±2.208 0.605±1.841 g__Pararheinheimera 0.671±1.439 0.981±1.532 0.465±1.378 g__JAAFJR01 0.377±1.888 0.943±2.969 0±0 g__Chryseobacterium 0.37±2.028 0±0 0.617±2.618 g__Novosphingobium 0.336±1.068 0.841±1.594 0±0 g__Pseudorhodoferax 0.334±0.916 0.325±0.995 0.34±0.889 g__UBA6184 0.158±0.866 0.395±1.37 0±0 g__Zoogloea 0.12±0.462 0±0 0.2±0.59 genus_summary_sort &lt;- genus_summary %&gt;% group_by(genus) %&gt;% summarise(mean=mean(relabun, na.rm=T),sd=sd(relabun, na.rm=T)) %&gt;% arrange(-mean) genus_summary %&gt;% mutate(genus=factor(genus, levels=rev(genus_summary_sort %&gt;% pull(genus)))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=genus, group=genus, color=phylum)) + scale_color_manual(values=phylum_colors) + geom_jitter(alpha=0.5) + facet_grid(.~environment)+ theme_minimal() + theme(axis.text.y = element_text(size=6))+ labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) Number of MAGs without genera-level annotation 5 .table td.tinytable_css_pshx8qgyu1mmvyqzetuo, .table th.tinytable_css_pshx8qgyu1mmvyqzetuo { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_mrq32ue5nfgo9ef04g1p, .table th.tinytable_css_mrq32ue5nfgo9ef04g1p { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } phylum count_nogene count_total percentage p__ 2 2 100.000000 p__Pseudomonadota 3 35 8.571429 Percentage of MAGs without genus-level annotation 11.62791 Number of MAGs without species-level annotation # A tibble: 1 × 1 Mag_nospecies &lt;int&gt; 1 33 .table td.tinytable_css_g8gaqx4tt7156ooq2yyv, .table th.tinytable_css_g8gaqx4tt7156ooq2yyv { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_9d7qiydtr3s433adgzvf, .table th.tinytable_css_9d7qiydtr3s433adgzvf { border-bottom: solid #d3d8dc 0.1em; } phylum count_nospecies count_total species_annotated percentage_non_species percentage_species p__ 2 2 0 100.00000 0.00000 p__Bacteroidota 5 6 1 83.33333 16.66667 p__Pseudomonadota 26 35 9 74.28571 25.71429 Percentage of MAGs without species-level annotation 76.74419 "],["alpha-diversity.html", "Chapter 6 Alpha diversity 6.1 Gut microbiota 6.2 Mixed models 6.3 Skin microbiota 6.4 Mixed models", " Chapter 6 Alpha diversity 6.1 Gut microbiota load(&quot;data/gut/data.Rdata&quot;) treatment_colors &lt;- c(&quot;#f56042&quot;,&quot;#429ef5&quot;) sample_metadata$environment &lt;- factor(sample_metadata$environment, levels=c(&quot;low&quot;, &quot;high&quot;)) # Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 0) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(richness = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(neutral = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, tree = genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(phylogenetic = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) # Aggregate basal GIFT into elements dist &lt;- genome_gifts %&gt;% to.elements(., GIFT_db) %&gt;% traits2dist(., method = &quot;gower&quot;) functional &lt;- genome_counts_filt %&gt;% filter(genome %in% rownames(dist)) %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, dist = dist) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(functional = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) %&gt;% mutate(functional = if_else(is.nan(functional), 1, functional)) # Merge all metrics alpha_div &lt;- richness %&gt;% full_join(neutral, by = join_by(sample == sample)) %&gt;% full_join(phylogenetic, by = join_by(sample == sample)) %&gt;% full_join(functional, by = join_by(sample == sample)) .table td.tinytable_css_88wt81phjkyi9ugq2zii, .table th.tinytable_css_88wt81phjkyi9ugq2zii { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_66i2tb0o6opm15zbkegs, .table th.tinytable_css_66i2tb0o6opm15zbkegs { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } alpha Total High Low richness 192.42±59.37 211.27±46.2 174.75±66.1 neutral 83.39±31.18 87.93±30.55 79.13±32.15 phylogenetic 6.1±1.49 6.41±1.31 5.81±1.62 functional 1.53±0.06 1.51±0.04 1.54±0.06 #Richness plot1 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% ggplot(aes(y = value, x = environment, group=environment, color=environment, fill=environment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + scale_x_discrete(labels=c(&quot;low&quot; = &quot;Low-altitude&quot;, &quot;high&quot; = &quot;High-altitude&quot;)) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.y = c(300), label.x = c(1.5))+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Richness&quot;) plot2 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% ggplot(aes(y = value, x = environment, group=environment, color=environment, fill=environment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + scale_x_discrete(labels=c(&quot;low&quot; = &quot;Low-altitude&quot;, &quot;high&quot; = &quot;High-altitude&quot;)) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.y = c(190), label.x = c(1.5))+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Neutral alpha diversity&quot;) plot3 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% ggplot(aes(y = value, x = environment, group=environment, color=environment, fill=environment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + scale_x_discrete(labels=c(&quot;low&quot; = &quot;Low-altitude&quot;, &quot;high&quot; = &quot;High-altitude&quot;)) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.y = c(12), label.x = c(1.5))+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Phylogenetic alpha diversity&quot;) plot4 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;functional&quot;) %&gt;% ggplot(aes(y = value, x = environment, group=environment, color=environment, fill=environment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + scale_x_discrete(labels=c(&quot;low&quot; = &quot;Low-altitude&quot;, &quot;high&quot; = &quot;High-altitude&quot;)) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.y = c(2), label.x = c(1.5))+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Functional alpha diversity&quot;) #Richness plot1 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% ggplot(aes(y = value, x = river, group=river, color=environment, fill=environment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_grid(~factor(environment, labels=c(&quot;low&quot; = &quot;Low-altitude&quot;, &quot;high&quot; = &quot;High-altitude&quot;)), scale=&quot;free&quot;, space = &quot;free&quot;)+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), strip.text = element_text(size = 12, lineheight = 0.6), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Richness&quot;) plot2 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% ggplot(aes(y = value, x = river, group=river, color=environment, fill=environment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_grid(~factor(environment, labels=c(&quot;low&quot; = &quot;Low-altitude&quot;, &quot;high&quot; = &quot;High-altitude&quot;)), scale=&quot;free&quot;, space = &quot;free&quot;)+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), strip.text = element_text(size = 12, lineheight = 0.6), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Neutral alpha diversity&quot;) plot3 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% ggplot(aes(y = value, x = river, group=river, color=environment, fill=environment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_grid(~factor(environment, labels=c(&quot;low&quot; = &quot;Low-altitude&quot;, &quot;high&quot; = &quot;High-altitude&quot;)), scale=&quot;free&quot;, space = &quot;free&quot;)+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), strip.text = element_text(size = 12, lineheight = 0.6), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Phylogenetic alpha diversity&quot;) plot4 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;functional&quot;) %&gt;% ggplot(aes(y = value, x = river, group=river, color=environment, fill=environment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_grid(~factor(environment, labels=c(&quot;low&quot; = &quot;Low-altitude&quot;, &quot;high&quot; = &quot;High-altitude&quot;)), scale=&quot;free&quot;, space = &quot;free&quot;)+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), strip.text = element_text(size = 12, lineheight = 0.6), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Functional alpha diversity&quot;) 6.2 Mixed models alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) Model_richness_random &lt;- lme(fixed = richness ~ environment, data = alpha_div_meta, random = ~ 1 | river) summary(Model_richness_random) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 329.9303 335.3995 -160.9651 Random effects: Formula: ~1 | river (Intercept) Residual StdDev: 21.59513 55.16286 Fixed effects: richness ~ environment Value Std.Error DF t-value p-value (Intercept) 173.24610 20.61576 27 8.403576 0.0000 environmenthigh 37.33032 29.35184 2 1.271822 0.3313 Correlation: (Intr) environmenthigh -0.702 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.5429671 -0.5388163 0.1955145 0.6326040 1.4452238 Number of Observations: 31 Number of Groups: 4 Model_richness&lt;- lm(formula = richness ~ environment+river, data = alpha_div_meta) summary(Model_richness) Call: lm(formula = richness ~ environment + river, data = alpha_div_meta) Residuals: Min 1Q Median 3Q Max -149.000 -26.473 5.625 30.527 82.000 Coefficients: (1 not defined because of singularities) Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 150.00 20.85 7.194 9.77e-08 *** environmenthigh 79.37 28.55 2.780 0.00978 ** riverGoizueta 44.00 27.80 1.583 0.12514 riverHarpea -38.80 28.55 -1.359 0.18536 riverLeitzaran NA NA NA NA --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 55.17 on 27 degrees of freedom Multiple R-squared: 0.2229, Adjusted R-squared: 0.1365 F-statistic: 2.581 on 3 and 27 DF, p-value: 0.07415 Model_richness_river_random &lt;- lme(fixed = richness ~ river, data = alpha_div_meta, random = ~ 1 | environment) summary(Model_richness_river_random) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 313.3502 321.1252 -150.6751 Random effects: Formula: ~1 | environment (Intercept) Residual StdDev: 37.366 55.16628 Fixed effects: richness ~ river Value Std.Error DF t-value p-value (Intercept) 229.37500 42.15012 26 5.441859 0.0000 riverGoizueta -35.37500 59.25366 26 -0.597010 0.5557 riverHarpea -38.80357 28.55126 26 -1.359084 0.1858 riverLeitzaran -79.37500 60.06338 26 -1.321521 0.1978 Correlation: (Intr) rvrGzt rvrHrp riverGoizueta -0.711 riverHarpea -0.316 0.225 riverLeitzaran -0.702 0.892 0.222 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.7009254 -0.4798804 0.1019645 0.5533595 1.4864153 Number of Observations: 31 Number of Groups: 2 emmeans(Model_richness_river_random, pairwise ~ river) $emmeans river emmean SE df lower.CL upper.CL Erlan 229 42.2 1 -306 765 Goizueta 194 41.6 1 -335 723 Harpea 191 42.8 1 -353 734 Leitzaran 150 42.8 1 -394 694 Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Erlan - Goizueta 35.38 59.3 26 0.597 0.9321 Erlan - Harpea 38.80 28.6 26 1.359 0.5352 Erlan - Leitzaran 79.38 60.1 26 1.322 0.5580 Goizueta - Harpea 3.43 59.7 26 0.057 0.9999 Goizueta - Leitzaran 44.00 27.8 26 1.583 0.4055 Harpea - Leitzaran 40.57 60.5 26 0.670 0.9073 Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 4 estimates Model_neutral_random &lt;- lme(fixed = neutral ~ environment, data = alpha_div_meta, random = ~ 1 | river) summary(Model_neutral_random) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 295.2978 300.7669 -143.6489 Random effects: Formula: ~1 | river (Intercept) Residual StdDev: 9.912162 30.55639 Fixed effects: neutral ~ environment Value Std.Error DF t-value p-value (Intercept) 78.85556 10.38754 27 7.591359 0.000 environmenthigh 8.65785 14.81199 2 0.584516 0.618 Correlation: (Intr) environmenthigh -0.701 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.4238198 -0.7326206 0.2137363 0.6704685 1.5896739 Number of Observations: 31 Number of Groups: 4 Model_neutral&lt;- lm(formula = neutral ~ environment+river, data = alpha_div_meta) summary(Model_neutral) Call: lm(formula = neutral ~ environment + river, data = alpha_div_meta) Residuals: Min 1Q Median 3Q Max -76.383 -17.997 8.131 22.748 51.557 Coefficients: (1 not defined because of singularities) Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 73.676 11.544 6.382 7.78e-07 *** environmenthigh 27.510 15.808 1.740 0.0932 . riverGoizueta 9.697 15.392 0.630 0.5340 riverHarpea -28.404 15.808 -1.797 0.0835 . riverLeitzaran NA NA NA NA --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 30.54 on 27 degrees of freedom Multiple R-squared: 0.1365, Adjusted R-squared: 0.04056 F-statistic: 1.423 on 3 and 27 DF, p-value: 0.2578 Model_neutral_river_random &lt;- lme(fixed = neutral ~ river, data = alpha_div_meta, random = ~ 1 | environment) summary(Model_neutral_river_random) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 281.4247 289.1997 -134.7124 Random effects: Formula: ~1 | environment (Intercept) Residual StdDev: 20.6879 30.54313 Fixed effects: neutral ~ river Value Std.Error DF t-value p-value (Intercept) 101.18544 23.33666 26 4.335901 0.0002 riverGoizueta -17.81285 32.80614 26 -0.542973 0.5918 riverHarpea -28.40448 15.80757 26 -1.796891 0.0840 riverLeitzaran -27.50973 33.25444 26 -0.827250 0.4156 Correlation: (Intr) rvrGzt rvrHrp riverGoizueta -0.711 riverHarpea -0.316 0.225 riverLeitzaran -0.702 0.892 0.222 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.5008274 -0.5892303 0.2662282 0.7447790 1.6880211 Number of Observations: 31 Number of Groups: 2 emmeans(Model_neutral_river_random, pairwise ~ river) $emmeans river emmean SE df lower.CL upper.CL Erlan 101.2 23.3 1 -195 398 Goizueta 83.4 23.1 1 -210 376 Harpea 72.8 23.7 1 -228 374 Leitzaran 73.7 23.7 1 -227 375 Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Erlan - Goizueta 17.813 32.8 26 0.543 0.9476 Erlan - Harpea 28.404 15.8 26 1.797 0.2975 Erlan - Leitzaran 27.510 33.3 26 0.827 0.8410 Goizueta - Harpea 10.592 33.1 26 0.320 0.9884 Goizueta - Leitzaran 9.697 15.4 26 0.630 0.9214 Harpea - Leitzaran -0.895 33.5 26 -0.027 1.0000 Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 4 estimates Model_phylogenetic_random &lt;- lme(fixed = phylogenetic ~ environment, data = alpha_div_meta, random = ~ 1 | river) summary(Model_phylogenetic_random) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 118.2195 123.6886 -55.10973 Random effects: Formula: ~1 | river (Intercept) Residual StdDev: 0.426169 1.446739 Fixed effects: phylogenetic ~ environment Value Std.Error DF t-value p-value (Intercept) 5.777606 0.4716660 27 12.249358 0.0000 environmenthigh 0.627189 0.6730979 2 0.931794 0.4498 Correlation: (Intr) environmenthigh -0.701 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.81309516 -0.55427671 0.01553295 0.64687619 2.08691696 Number of Observations: 31 Number of Groups: 4 Model_phylogenetic&lt;- lm(formula = phylogenetic ~ environment+river, data = alpha_div_meta) summary(Model_phylogenetic) Call: lm(formula = phylogenetic ~ environment + river, data = alpha_div_meta) Residuals: Min 1Q Median 3Q Max -2.9469 -0.6957 0.1086 0.8377 2.6954 Coefficients: (1 not defined because of singularities) Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 5.1084 0.5471 9.338 6.04e-10 *** environmenthigh 1.5230 0.7491 2.033 0.0520 . riverGoizueta 1.2458 0.7294 1.708 0.0991 . riverHarpea -0.4724 0.7491 -0.631 0.5335 riverLeitzaran NA NA NA NA --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 1.447 on 27 degrees of freedom Multiple R-squared: 0.147, Adjusted R-squared: 0.05223 F-statistic: 1.551 on 3 and 27 DF, p-value: 0.2241 Model_phylogenetic_river_random &lt;- lme(fixed = phylogenetic ~ river, data = alpha_div_meta, random = ~ 1 | environment) summary(Model_phylogenetic_river_random) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 116.7579 124.5329 -52.37894 Random effects: Formula: ~1 | environment (Intercept) Residual StdDev: 0.9803586 1.447378 Fixed effects: phylogenetic ~ river Value Std.Error DF t-value p-value (Intercept) 6.631462 1.1058780 26 5.996558 0.0000 riverGoizueta -0.277199 1.5546177 26 -0.178307 0.8599 riverHarpea -0.472448 0.7490895 26 -0.630696 0.5337 riverLeitzaran -1.523025 1.5758620 26 -0.966471 0.3427 Correlation: (Intr) rvrGzt rvrHrp riverGoizueta -0.711 riverHarpea -0.316 0.225 riverLeitzaran -0.702 0.892 0.222 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.03600301 -0.48068845 0.07505949 0.57879915 1.86228675 Number of Observations: 31 Number of Groups: 2 emmeans(Model_phylogenetic_river_random, pairwise ~ river) $emmeans river emmean SE df lower.CL upper.CL Erlan 6.63 1.11 1 -7.42 20.7 Goizueta 6.35 1.09 1 -7.53 20.2 Harpea 6.16 1.12 1 -8.11 20.4 Leitzaran 5.11 1.12 1 -9.16 19.4 Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Erlan - Goizueta 0.277 1.550 26 0.178 0.9979 Erlan - Harpea 0.472 0.749 26 0.631 0.9212 Erlan - Leitzaran 1.523 1.580 26 0.966 0.7694 Goizueta - Harpea 0.195 1.570 26 0.125 0.9993 Goizueta - Leitzaran 1.246 0.729 26 1.708 0.3400 Harpea - Leitzaran 1.051 1.590 26 0.662 0.9104 Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 4 estimates Model_functional_random &lt;- lme(fixed = functional ~ environment, data = alpha_div_meta, random = ~ 1 | river) summary(Model_functional_random) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik -72.11555 -66.64636 40.05777 Random effects: Formula: ~1 | river (Intercept) Residual StdDev: 1.311235e-06 0.05531369 Fixed effects: functional ~ environment Value Std.Error DF t-value p-value (Intercept) 1.5449538 0.01382842 27 111.72306 0.000 environmenthigh -0.0338168 0.01987961 2 -1.70108 0.231 Correlation: (Intr) environmenthigh -0.696 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.8874575 -0.5876619 -0.1146344 0.3908957 2.4239811 Number of Observations: 31 Number of Groups: 4 Model_functional&lt;- lm(formula = functional ~ environment+river, data = alpha_div_meta) summary(Model_functional) Call: lm(formula = functional ~ environment + river, data = alpha_div_meta) Residuals: Min 1Q Median 3Q Max -0.106425 -0.032336 -0.003625 0.021286 0.132057 Coefficients: (1 not defined because of singularities) Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 1.546976 0.021649 71.457 &lt;2e-16 *** environmenthigh -0.033463 0.029644 -1.129 0.269 riverGoizueta -0.003596 0.028865 -0.125 0.902 riverHarpea -0.005092 0.029644 -0.172 0.865 riverLeitzaran NA NA NA NA --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 0.05728 on 27 degrees of freedom Multiple R-squared: 0.09224, Adjusted R-squared: -0.008619 F-statistic: 0.9145 on 3 and 27 DF, p-value: 0.447 Model_functional_river_random &lt;- lme(fixed = functional ~ river, data = alpha_div_meta, random = ~ 1 | environment) summary(Model_functional_river_random) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik -57.64011 -49.86509 34.82005 Random effects: Formula: ~1 | environment (Intercept) Residual StdDev: 0.03879635 0.05727801 Fixed effects: functional ~ river Value Std.Error DF t-value p-value (Intercept) 1.5135133 0.04376360 26 34.58384 0.0000 riverGoizueta 0.0298673 0.06152186 26 0.48547 0.6314 riverHarpea -0.0050923 0.02964419 26 -0.17178 0.8649 riverLeitzaran 0.0334630 0.06236258 26 0.53659 0.5961 Correlation: (Intr) rvrGzt rvrHrp riverGoizueta -0.711 riverHarpea -0.316 0.225 riverLeitzaran -0.702 0.892 0.222 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.85803985 -0.56454487 -0.06328714 0.37162630 2.30554003 Number of Observations: 31 Number of Groups: 2 emmeans(Model_functional_river_random, pairwise ~ river) $emmeans river emmean SE df lower.CL upper.CL Erlan 1.51 0.0438 1 0.957 2.07 Goizueta 1.54 0.0432 1 0.994 2.09 Harpea 1.51 0.0444 1 0.944 2.07 Leitzaran 1.55 0.0444 1 0.982 2.11 Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Erlan - Goizueta -0.02987 0.0615 26 -0.485 0.9616 Erlan - Harpea 0.00509 0.0296 26 0.172 0.9982 Erlan - Leitzaran -0.03346 0.0624 26 -0.537 0.9493 Goizueta - Harpea 0.03496 0.0620 26 0.564 0.9419 Goizueta - Leitzaran -0.00360 0.0289 26 -0.125 0.9993 Harpea - Leitzaran -0.03856 0.0628 26 -0.614 0.9268 Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 4 estimates 6.3 Skin microbiota load(&quot;data/skin/data.Rdata&quot;) sample_metadata$environment &lt;- factor(sample_metadata$environment, levels=c(&quot;low&quot;, &quot;high&quot;)) # Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 0) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(richness = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(neutral = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, tree = genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(phylogenetic = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) # Aggregate basal GIFT into elements dist &lt;- genome_gifts %&gt;% to.elements(., GIFT_db) %&gt;% traits2dist(., method = &quot;gower&quot;) functional &lt;- genome_counts_filt %&gt;% filter(genome %in% rownames(dist)) %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, dist = dist) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(functional = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) %&gt;% mutate(functional = if_else(is.nan(functional), 1, functional)) # Merge all metrics alpha_div &lt;- richness %&gt;% full_join(neutral, by = join_by(sample == sample)) %&gt;% full_join(phylogenetic, by = join_by(sample == sample)) %&gt;% full_join(functional, by = join_by(sample == sample)) .table td.tinytable_css_pjyvoixzc7z4rjdcq28g, .table th.tinytable_css_pjyvoixzc7z4rjdcq28g { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_2564nww7le25ndbo6rny, .table th.tinytable_css_2564nww7le25ndbo6rny { border-bottom: solid #d3d8dc 0.1em; } alpha Total High Low richness 10.3±5.95 13.83±6.39 7.94±4.4 neutral 5.91±2.64 6.99±3.13 5.19±2.04 phylogenetic 2.2±0.64 2.3±0.64 2.13±0.64 functional 1.59±0.19 1.57±0.18 1.61±0.2 #Richness plot1 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% ggplot(aes(y = value, x = environment, group=environment, color=environment, fill=environment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + scale_x_discrete(labels=c(&quot;low&quot; = &quot;Low-altitude&quot;, &quot;high&quot; = &quot;High-altitude&quot;)) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.y = c(33), label.x = c(1.5))+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Richness&quot;) plot2 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% ggplot(aes(y = value, x = environment, group=environment, color=environment, fill=environment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + scale_x_discrete(labels=c(&quot;low&quot; = &quot;Low-altitude&quot;, &quot;high&quot; = &quot;High-altitude&quot;)) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.y = c(13), label.x = c(1.5))+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Neutral alpha diversity&quot;) plot3 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% ggplot(aes(y = value, x = environment, group=environment, color=environment, fill=environment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + scale_x_discrete(labels=c(&quot;low&quot; = &quot;Low-altitude&quot;, &quot;high&quot; = &quot;High-altitude&quot;)) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.y = c(4), label.x = c(1.5))+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Phylogenetic alpha diversity&quot;) plot4 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;functional&quot;) %&gt;% ggplot(aes(y = value, x = environment, group=environment, color=environment, fill=environment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + scale_x_discrete(labels=c(&quot;low&quot; = &quot;Low-altitude&quot;, &quot;high&quot; = &quot;High-altitude&quot;)) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.y = c(3), label.x = c(1.5))+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Functional alpha diversity&quot;) #Richness plot1 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% ggplot(aes(y = value, x = river, group=river, color=environment, fill=environment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_grid(~factor(environment, labels=c(&quot;low&quot; = &quot;Low-altitude&quot;, &quot;high&quot; = &quot;High-altitude&quot;)), scale=&quot;free&quot;, space = &quot;free&quot;)+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), strip.text = element_text(size = 12, lineheight = 0.6), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Richness&quot;) plot2 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% ggplot(aes(y = value, x = river, group=river, color=environment, fill=environment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_grid(~factor(environment, labels=c(&quot;low&quot; = &quot;Low-altitude&quot;, &quot;high&quot; = &quot;High-altitude&quot;)), scale=&quot;free&quot;, space = &quot;free&quot;)+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), strip.text = element_text(size = 12, lineheight = 0.6), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Neutral alpha diversity&quot;) plot3 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% ggplot(aes(y = value, x = river, group=river, color=environment, fill=environment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_grid(~factor(environment, labels=c(&quot;low&quot; = &quot;Low-altitude&quot;, &quot;high&quot; = &quot;High-altitude&quot;)), scale=&quot;free&quot;, space = &quot;free&quot;)+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), strip.text = element_text(size = 12, lineheight = 0.6), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Phylogenetic alpha diversity&quot;) plot4 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;functional&quot;) %&gt;% ggplot(aes(y = value, x = river, group=river, color=environment, fill=environment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_grid(~factor(environment, labels=c(&quot;low&quot; = &quot;Low-altitude&quot;, &quot;high&quot; = &quot;High-altitude&quot;)), scale=&quot;free&quot;, space = &quot;free&quot;)+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), strip.text = element_text(size = 12, lineheight = 0.6), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Functional alpha diversity&quot;) #Richness plot1 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% ggplot(aes(y = value, x = position, group=position, color=environment, fill=environment)) + geom_jitter(position = position_dodge(width = 0.5), show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + geom_line(aes(group = capture_id_flat), show.legend = FALSE)+ scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_grid(~factor(environment, labels=c(&quot;low&quot; = &quot;Low-altitude&quot;, &quot;high&quot; = &quot;High-altitude&quot;)), scale=&quot;free&quot;, space = &quot;free&quot;)+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), strip.text = element_text(size = 12, lineheight = 0.6), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Richness&quot;) plot2 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% ggplot(aes(y = value, x = position, group=position, color=environment, fill=environment)) + geom_jitter(position = position_dodge(width = 0.5), show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + geom_line(aes(group = capture_id_flat), show.legend = FALSE)+ scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_grid(~factor(environment, labels=c(&quot;low&quot; = &quot;Low-altitude&quot;, &quot;high&quot; = &quot;High-altitude&quot;)), scale=&quot;free&quot;, space = &quot;free&quot;)+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), strip.text = element_text(size = 12, lineheight = 0.6), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Neutral alpha diversity&quot;) plot3 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% ggplot(aes(y = value, x = position, group=position, color=environment, fill=environment)) + geom_jitter(position = position_dodge(width = 0.5), show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + geom_line(aes(group = capture_id_flat), show.legend = FALSE)+ scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_grid(~factor(environment, labels=c(&quot;low&quot; = &quot;Low-altitude&quot;, &quot;high&quot; = &quot;High-altitude&quot;)), scale=&quot;free&quot;, space = &quot;free&quot;)+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), strip.text = element_text(size = 12, lineheight = 0.6), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Phylogenetic alpha diversity&quot;) plot4 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;functional&quot;) %&gt;% ggplot(aes(y = value, x = position, group=position, color=environment, fill=environment)) + geom_jitter(position = position_dodge(width = 0.5), show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + geom_line(aes(group = capture_id_flat), show.legend = FALSE)+ scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_grid(~factor(environment, labels=c(&quot;low&quot; = &quot;Low-altitude&quot;, &quot;high&quot; = &quot;High-altitude&quot;)), scale=&quot;free&quot;, space = &quot;free&quot;)+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), strip.text = element_text(size = 12, lineheight = 0.6), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Functional alpha diversity&quot;) 6.4 Mixed models alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) Model_richness_random &lt;- lme(fixed = richness ~ environment, data = alpha_div_meta, random = ~ 1 | river) summary(Model_richness_random) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 185.9444 191.2733 -88.97222 Random effects: Formula: ~1 | river (Intercept) Residual StdDev: 0.0003956616 5.273285 Fixed effects: richness ~ environment Value Std.Error DF t-value p-value (Intercept) 7.944444 1.242925 26 6.391731 0.0000 environmenthigh 5.888889 1.965237 2 2.996528 0.0957 Correlation: (Intr) environmenthigh -0.632 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.8647451 -0.5583700 -0.1790998 0.3634673 2.8761323 Number of Observations: 30 Number of Groups: 4 Model_richness&lt;- lm(formula = richness ~ environment+river, data = alpha_div_meta) summary(Model_richness) Call: lm(formula = richness ~ environment + river, data = alpha_div_meta) Residuals: Min 1Q Median 3Q Max -11.250 -2.333 -1.292 2.500 13.750 Coefficients: (1 not defined because of singularities) Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 7.5556 1.7635 4.284 0.000222 *** environmenthigh 7.6944 2.5707 2.993 0.005985 ** riverGoizueta 0.7778 2.4940 0.312 0.757631 riverHarpea -4.2500 3.2398 -1.312 0.201044 riverLeitzaran NA NA NA NA --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 5.29 on 26 degrees of freedom Multiple R-squared: 0.2923, Adjusted R-squared: 0.2106 F-statistic: 3.58 on 3 and 26 DF, p-value: 0.02731 Model_richness_river_random &lt;- lme(fixed = richness ~ river, data = alpha_div_meta, random = ~ 1 | environment) summary(Model_richness_river_random) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 180.2724 187.821 -84.13619 Random effects: Formula: ~1 | environment (Intercept) Residual StdDev: 3.642665 5.290493 Fixed effects: richness ~ river Value Std.Error DF t-value p-value (Intercept) 15.250000 4.094835 25 3.724204 0.0010 riverGoizueta -6.916667 5.757309 25 -1.201371 0.2409 riverHarpea -4.250000 3.239752 25 -1.311829 0.2015 riverLeitzaran -7.694444 5.757309 25 -1.336465 0.1934 Correlation: (Intr) rvrGzt rvrHrp riverGoizueta -0.711 riverHarpea -0.264 0.188 riverLeitzaran -0.711 0.906 0.188 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.1264559 -0.4410427 -0.2441486 0.4725458 2.5990016 Number of Observations: 30 Number of Groups: 2 emmeans(Model_richness_river_random, pairwise ~ river) $emmeans river emmean SE df lower.CL upper.CL Erlan 15.25 4.09 1 -36.8 67.3 Goizueta 8.33 4.05 1 -43.1 59.8 Harpea 11.00 4.50 1 -46.2 68.2 Leitzaran 7.56 4.05 1 -43.9 59.0 Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Erlan - Goizueta 6.917 5.76 25 1.201 0.6317 Erlan - Harpea 4.250 3.24 25 1.312 0.5643 Erlan - Leitzaran 7.694 5.76 25 1.336 0.5493 Goizueta - Harpea -2.667 6.05 25 -0.441 0.9708 Goizueta - Leitzaran 0.778 2.49 25 0.312 0.9892 Harpea - Leitzaran 3.444 6.05 25 0.569 0.9404 Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 4 estimates Model_neutral_random &lt;- lme(fixed = neutral ~ environment, data = alpha_div_meta, random = ~ 1 | river) summary(Model_neutral_random) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 144.7044 150.0333 -68.35222 Random effects: Formula: ~1 | river (Intercept) Residual StdDev: 0.0001011014 2.52496 Fixed effects: neutral ~ environment Value Std.Error DF t-value p-value (Intercept) 5.191868 0.5951388 26 8.723794 0.0000 environmenthigh 1.798886 0.9409970 2 1.911681 0.1961 Correlation: (Intr) environmenthigh -0.632 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.9419038 -0.6397730 0.0293812 0.6857502 1.8249570 Number of Observations: 30 Number of Groups: 4 Model_neutral&lt;- lm(formula = neutral ~ environment+river, data = alpha_div_meta) summary(Model_neutral) Call: lm(formula = neutral ~ environment + river, data = alpha_div_meta) Residuals: Min 1Q Median 3Q Max -5.3855 -1.5259 -0.0575 1.3685 4.1256 Coefficients: (1 not defined because of singularities) Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 5.2909 0.8592 6.158 1.64e-06 *** environmenthigh 2.1821 1.2525 1.742 0.0933 . riverGoizueta -0.1981 1.2151 -0.163 0.8717 riverHarpea -1.4469 1.5785 -0.917 0.3677 riverLeitzaran NA NA NA NA --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 2.578 on 26 degrees of freedom Multiple R-squared: 0.144, Adjusted R-squared: 0.04522 F-statistic: 1.458 on 3 and 26 DF, p-value: 0.249 Model_neutral_river_random &lt;- lme(fixed = neutral ~ river, data = alpha_div_meta, random = ~ 1 | environment) summary(Model_neutral_river_random) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 142.8828 150.4314 -65.4414 Random effects: Formula: ~1 | environment (Intercept) Residual StdDev: 1.774796 2.577658 Fixed effects: neutral ~ river Value Std.Error DF t-value p-value (Intercept) 7.473064 1.995104 25 3.745702 0.0009 riverGoizueta -2.380254 2.805102 25 -0.848545 0.4042 riverHarpea -1.446929 1.578486 25 -0.916656 0.3681 riverLeitzaran -2.182138 2.805102 25 -0.777918 0.4439 Correlation: (Intr) rvrGzt rvrHrp riverGoizueta -0.711 riverHarpea -0.264 0.188 riverLeitzaran -0.711 0.906 0.188 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.0893151 -0.5919908 -0.0222941 0.5309259 1.6005361 Number of Observations: 30 Number of Groups: 2 emmeans(Model_neutral_river_random, pairwise ~ river) $emmeans river emmean SE df lower.CL upper.CL Erlan 7.47 2.00 1 -17.9 32.8 Goizueta 5.09 1.97 1 -20.0 30.1 Harpea 6.03 2.19 1 -21.8 33.9 Leitzaran 5.29 1.97 1 -19.8 30.3 Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Erlan - Goizueta 2.380 2.81 25 0.849 0.8308 Erlan - Harpea 1.447 1.58 25 0.917 0.7962 Erlan - Leitzaran 2.182 2.81 25 0.778 0.8637 Goizueta - Harpea -0.933 2.95 25 -0.316 0.9888 Goizueta - Leitzaran -0.198 1.22 25 -0.163 0.9984 Harpea - Leitzaran 0.735 2.95 25 0.249 0.9944 Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 4 estimates Model_phylogenetic_random &lt;- lme(fixed = phylogenetic ~ environment, data = alpha_div_meta, random = ~ 1 | river) summary(Model_phylogenetic_random) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 67.99081 73.31963 -29.9954 Random effects: Formula: ~1 | river (Intercept) Residual StdDev: 0.05868171 0.6403472 Fixed effects: phylogenetic ~ environment Value Std.Error DF t-value p-value (Intercept) 2.1334418 0.1565312 26 13.629496 0.0000 environmenthigh 0.1652765 0.2461245 2 0.671516 0.5711 Correlation: (Intr) environmenthigh -0.636 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.785233163 -0.812529685 0.008843233 0.752301044 2.029598435 Number of Observations: 30 Number of Groups: 4 Model_phylogenetic&lt;- lm(formula = phylogenetic ~ environment+river, data = alpha_div_meta) summary(Model_phylogenetic) Call: lm(formula = phylogenetic ~ environment + river, data = alpha_div_meta) Residuals: Min 1Q Median 3Q Max -1.2719 -0.2575 0.1420 0.4271 1.1709 Coefficients: (1 not defined because of singularities) Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 1.9950 0.2129 9.372 8.04e-10 *** environmenthigh 0.4627 0.3103 1.491 0.148 riverGoizueta 0.2769 0.3011 0.920 0.366 riverHarpea -0.4670 0.3911 -1.194 0.243 riverLeitzaran NA NA NA NA --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 0.6386 on 26 degrees of freedom Multiple R-squared: 0.09638, Adjusted R-squared: -0.00788 F-statistic: 0.9244 on 3 and 26 DF, p-value: 0.4429 Model_phylogenetic_river_random &lt;- lme(fixed = phylogenetic ~ river, data = alpha_div_meta, random = ~ 1 | environment) summary(Model_phylogenetic_river_random) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 70.32658 77.87516 -29.16329 Random effects: Formula: ~1 | environment (Intercept) Residual StdDev: 0.4397157 0.6386294 Fixed effects: phylogenetic ~ river Value Std.Error DF t-value p-value (Intercept) 2.4577070 0.4942984 25 4.972112 0.0000 riverGoizueta -0.1858391 0.6949800 25 -0.267402 0.7914 riverHarpea -0.4669572 0.3910790 25 -1.194023 0.2437 riverLeitzaran -0.4626914 0.6949800 25 -0.665762 0.5117 Correlation: (Intr) rvrGzt rvrHrp riverGoizueta -0.711 riverHarpea -0.264 0.188 riverLeitzaran -0.711 0.906 0.188 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.9915588 -0.4031773 0.2223355 0.6687453 1.8335342 Number of Observations: 30 Number of Groups: 2 emmeans(Model_phylogenetic_river_random, pairwise ~ river) $emmeans river emmean SE df lower.CL upper.CL Erlan 2.46 0.494 1 -3.82 8.74 Goizueta 2.27 0.489 1 -3.94 8.48 Harpea 1.99 0.543 1 -4.91 8.90 Leitzaran 2.00 0.489 1 -4.21 8.20 Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Erlan - Goizueta 0.18584 0.695 25 0.267 0.9931 Erlan - Harpea 0.46696 0.391 25 1.194 0.6362 Erlan - Leitzaran 0.46269 0.695 25 0.666 0.9089 Goizueta - Harpea 0.28112 0.731 25 0.385 0.9802 Goizueta - Leitzaran 0.27685 0.301 25 0.920 0.7947 Harpea - Leitzaran -0.00427 0.731 25 -0.006 1.0000 Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 4 estimates Model_functional_random &lt;- lme(fixed = functional ~ environment, data = alpha_div_meta, random = ~ 1 | river) summary(Model_functional_random) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 0.201896 5.530714 3.899052 Random effects: Formula: ~1 | river (Intercept) Residual StdDev: 1.348064e-06 0.1912493 Fixed effects: functional ~ environment Value Std.Error DF t-value p-value (Intercept) 1.6100106 0.04507789 26 35.71619 0.0000 environmenthigh -0.0378777 0.07127440 2 -0.53144 0.6482 Correlation: (Intr) environmenthigh -0.632 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -3.1896096 -0.4346244 0.3668405 0.6721353 1.1340822 Number of Observations: 30 Number of Groups: 4 Model_functional&lt;- lm(formula = functional ~ environment+river, data = alpha_div_meta) summary(Model_functional) Call: lm(formula = functional ~ environment + river, data = alpha_div_meta) Residuals: Min 1Q Median 3Q Max -0.62775 -0.05932 0.05779 0.11513 0.22103 Coefficients: (1 not defined because of singularities) Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 1.592275 0.065843 24.183 &lt;2e-16 *** environmenthigh -0.007228 0.095982 -0.075 0.941 riverGoizueta 0.035471 0.093117 0.381 0.706 riverHarpea -0.038742 0.120962 -0.320 0.751 riverLeitzaran NA NA NA NA --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 0.1975 on 26 degrees of freedom Multiple R-squared: 0.01933, Adjusted R-squared: -0.09383 F-statistic: 0.1708 on 3 and 26 DF, p-value: 0.9151 Model_functional_river_random &lt;- lme(fixed = functional ~ river, data = alpha_div_meta, random = ~ 1 | environment) summary(Model_functional_river_random) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 9.308044 16.85662 1.345978 Random effects: Formula: ~1 | environment (Intercept) Residual StdDev: 0.1360055 0.1975301 Fixed effects: functional ~ river Value Std.Error DF t-value p-value (Intercept) 1.5850470 0.1528880 25 10.367370 0.0000 riverGoizueta 0.0426993 0.2149595 25 0.198639 0.8442 riverHarpea -0.0387423 0.1209620 25 -0.320285 0.7514 riverLeitzaran 0.0072279 0.2149595 25 0.033625 0.9734 Correlation: (Intr) rvrGzt rvrHrp riverGoizueta -0.711 riverHarpea -0.264 0.188 riverLeitzaran -0.711 0.906 0.188 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -3.1779780 -0.3002910 0.2925399 0.5828679 1.1189470 Number of Observations: 30 Number of Groups: 2 emmeans(Model_functional_river_random, pairwise ~ river) $emmeans river emmean SE df lower.CL upper.CL Erlan 1.59 0.153 1 -0.358 3.53 Goizueta 1.63 0.151 1 -0.292 3.55 Harpea 1.55 0.168 1 -0.589 3.68 Leitzaran 1.59 0.151 1 -0.328 3.51 Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Erlan - Goizueta -0.04270 0.2150 25 -0.199 0.9971 Erlan - Harpea 0.03874 0.1210 25 0.320 0.9884 Erlan - Leitzaran -0.00723 0.2150 25 -0.034 1.0000 Goizueta - Harpea 0.08144 0.2260 25 0.360 0.9836 Goizueta - Leitzaran 0.03547 0.0931 25 0.381 0.9808 Harpea - Leitzaran -0.04597 0.2260 25 -0.203 0.9969 Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 4 estimates "],["beta-diversity.html", "Chapter 7 Beta diversity 7.1 Gut microbiota 7.2 Skin microbiota", " Chapter 7 Beta diversity 7.1 Gut microbiota #load(&quot;data/gut/data.Rdata&quot;) #load(&quot;data/gut/beta_all.Rdata&quot;) load(&quot;data/gut/beta_EHI02625.Rdata&quot;) sample_metadata&lt;- sample_metadata %&gt;% filter(sample!=&quot;EHI02625&quot;) #load(&quot;data/gut/beta_EHI02625_EHI02632.Rdata&quot;) #sample_metadata&lt;- sample_metadata %&gt;% filter(!sample %in% c(&quot;EHI02625&quot;, &quot;EHI02632&quot;)) treatment_colors &lt;- c(&quot;#429ef5&quot;,&quot;#f56042&quot;) EHI02625 sample has been removed because otherwise the permutest analysis was significant beta_q0n &lt;- genome_counts_filt %&gt;% select(-EHI02625) %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 0) beta_q1n &lt;- genome_counts_filt %&gt;% select(-EHI02625) %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1) genome_counts_filt_beta &lt;- genome_counts_filt %&gt;% select(-EHI02625) %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0))%&gt;% rownames_to_column(., &quot;genome&quot;) genome_tree &lt;- keep.tip(genome_tree, tip=genome_counts_filt_beta$genome) beta_q1p &lt;- genome_counts_filt %&gt;% select(-EHI02625) %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1, tree = genome_tree) genome_gifts1 &lt;- genome_gifts[genome_counts_filt_beta$genome,] genome_gifts1 &lt;- genome_gifts1[, colSums(genome_gifts1 != 0) &gt; 0] dist &lt;- genome_gifts1 %&gt;% to.elements(., GIFT_db) %&gt;% traits2dist(., method = &quot;gower&quot;) beta_q1f &lt;- genome_counts_filt %&gt;% select(-EHI02625) %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1, dist = dist) set.seed(2024) 7.1.1 Permanova #Richness betadisper(beta_q0n$S, sample_metadata$environment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.004882 0.0048824 0.5967 999 0.452 Residuals 28 0.229119 0.0081828 adonis2(beta_q0n$S ~ environment+environment:river, by=&quot;terms&quot;, data = sample_metadata %&gt;% arrange(match(sample,labels(beta_q0n$S))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_tlpecfvd74e8455x4sdl, .table th.tinytable_css_tlpecfvd74e8455x4sdl { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_2nhy95ccv68d5vpw02yy, .table th.tinytable_css_2nhy95ccv68d5vpw02yy { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value environment 1 0.1912429 0.02977817 0.8712751 0.574 environment:river 2 0.5240676 0.08160183 1.1937880 0.181 Residual 26 5.7069417 0.88861999 NA NA Total 29 6.4222522 1.00000000 NA NA #Neutral diversity betadisper(beta_q1n$S, sample_metadata$environment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.01058 0.010577 0.871 999 0.372 Residuals 28 0.34002 0.012143 adonis2(beta_q1n$S ~ environment+environment:river, by=&quot;terms&quot;, data = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1n$S))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_w72g8k0fta1aea4pl08p, .table th.tinytable_css_w72g8k0fta1aea4pl08p { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_6yhtb1uo5qic6o6ror9r, .table th.tinytable_css_6yhtb1uo5qic6o6ror9r { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value environment 1 0.1711220 0.02733528 0.8063353 0.644 environment:river 2 0.5712231 0.09124803 1.3458157 0.117 Residual 26 5.5177688 0.88141668 NA NA Total 29 6.2601139 1.00000000 NA NA pairwise.adonis(beta_q1n$S, sample_metadata$river, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Leitzaran vs Erlan 1 0.1338109 0.6776624 0.04322471 0.849 1.000 2 Leitzaran vs Harpea 1 0.1979862 0.9834991 0.08207111 0.425 1.000 3 Leitzaran vs Goizueta 1 0.3897037 1.8230924 0.10228822 0.033 0.198 4 Erlan vs Harpea 1 0.1815194 0.8653614 0.07964405 0.502 1.000 5 Erlan vs Goizueta 1 0.3503850 1.5910288 0.09589693 0.093 0.558 6 Harpea vs Goizueta 1 0.1747925 0.7522735 0.06401089 0.659 1.000 #Phylogenetic diversity betadisper(beta_q1p$S, sample_metadata$environment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.000197 0.0001966 0.0199 999 0.91 Residuals 28 0.277227 0.0099010 adonis2(beta_q1p$S ~ environment+environment:river, by=&quot;terms&quot;, data = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1p$S))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_s4r8ic0i1anx7o3oa1gl, .table th.tinytable_css_s4r8ic0i1anx7o3oa1gl { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_qmpjk0b18udi3t90sxbj, .table th.tinytable_css_qmpjk0b18udi3t90sxbj { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value environment 1 0.00865136 0.008713424 0.2443490 0.926 environment:river 2 0.06367648 0.064133287 0.8992394 0.538 Residual 26 0.92054943 0.927153289 NA NA Total 29 0.99287727 1.000000000 NA NA #Functional diversity betadisper(beta_q1f$S, sample_metadata$environment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.004443 0.0044428 1.7187 999 0.23 Residuals 28 0.072378 0.0025849 adonis2(beta_q1f$S ~ environment+environment:river, by=&quot;terms&quot;, data = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1f$S))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_bbz1lmwigwogxrfozo14, .table th.tinytable_css_bbz1lmwigwogxrfozo14 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_2vybvcjrw4ptlwjt2a06, .table th.tinytable_css_2vybvcjrw4ptlwjt2a06 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value environment 1 -0.002466008 -0.01992396 -0.5574724 0.773 environment:river 2 0.011224651 0.09068886 1.2687372 0.362 Residual 26 0.115012362 0.92923510 NA NA Total 29 0.123771004 1.00000000 NA NA pairwise.adonis(beta_q1f$S, sample_metadata$river, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Leitzaran vs Erlan 1 -0.0031568038 -0.65940986 -0.045982059 0.702 1 2 Leitzaran vs Harpea 1 -0.0002717366 -0.04285861 -0.003911477 0.552 1 3 Leitzaran vs Goizueta 1 0.0099830921 1.51206257 0.086344059 0.316 1 4 Erlan vs Harpea 1 0.0012415588 1.32425202 0.116939469 0.298 1 5 Erlan vs Goizueta 1 0.0071487433 2.36875377 0.136380180 0.243 1 6 Harpea vs Goizueta 1 0.0002949626 0.07510169 0.006781128 0.608 1 7.1.2 NMDS ####Richness beta_q0n$S %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(environment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = environment, shape = as.factor(river))) + geom_point(size = 4) + scale_color_manual(values = treatment_colors,labels=c(&quot;high&quot; = &quot;High-altitude&quot;, &quot;low&quot; = &quot;Low-altitude&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) + labs(color=&quot;Altitude&quot;, shape=&quot;River&quot;)+geom_text_repel(aes(label = sample), size=3) 7.1.2.1 Neutral diversity beta_q1n$S %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(environment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = environment, shape = as.factor(river))) + geom_point(size = 4) + scale_color_manual(values = treatment_colors,labels=c(&quot;high&quot; = &quot;High-altitude&quot;, &quot;low&quot; = &quot;Low-altitude&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) + labs(color=&quot;Altitude&quot;, shape=&quot;River&quot;) 7.1.2.2 Phylogenetic diversity beta_q1p$S %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(environment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = environment, shape = as.factor(river))) + geom_point(size = 4) + scale_color_manual(values = treatment_colors,labels=c(&quot;high&quot; = &quot;High-altitude&quot;, &quot;low&quot; = &quot;Low-altitude&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) + labs(color=&quot;Altitude&quot;, shape=&quot;River&quot;)+geom_text_repel(aes(label = sample), size=3) 7.1.2.3 Functional diversity beta_q1f$S %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(environment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = environment, shape = as.factor(river))) + geom_point(size = 4) + scale_color_manual(values = treatment_colors,labels=c(&quot;high&quot; = &quot;High-altitude&quot;, &quot;low&quot; = &quot;Low-altitude&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) + labs(color=&quot;Altitude&quot;, shape=&quot;River&quot;)+geom_text_repel(aes(label = sample), size=3) 7.2 Skin microbiota load(&quot;data/skin/data.Rdata&quot;) load(&quot;data/skin/beta.Rdata&quot;) treatment_colors &lt;- c(&quot;#429ef5&quot;,&quot;#f56042&quot;) set.seed(2024) beta_q0n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 0) beta_q1n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1) genome_counts_filt_beta &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0))%&gt;% rownames_to_column(., &quot;genome&quot;) genome_tree &lt;- keep.tip(genome_tree, tip=genome_counts_filt_beta$genome) beta_q1p &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1, tree = genome_tree) genome_gifts1 &lt;- genome_gifts[rownames(genome_gifts) %in% genome_counts_filt_beta$genome,] genome_gifts1 &lt;- genome_gifts1[, colSums(genome_gifts1 != 0) &gt; 0] genome_counts_filt_beta &lt;- genome_counts_filt_beta[genome_counts_filt_beta$genome %in% rownames(genome_gifts),] dist &lt;- genome_gifts1 %&gt;% distillR::to.elements(., GIFT_db) %&gt;% traits2dist(., method = &quot;gower&quot;) beta_q1f &lt;- genome_counts_filt_beta %&gt;% remove_rownames() %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1, dist = dist) 7.2.1 Permanova #Richness betadisper(beta_q0n$S, sample_metadata$environment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.069784 0.069784 11.456 999 0.001 *** Residuals 28 0.170560 0.006091 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(beta_q0n$S ~ environment+environment:river, by=&quot;terms&quot;, data = sample_metadata %&gt;% arrange(match(sample,labels(beta_q0n$S))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_tlpecfvd74e8455x4sdl, .table th.tinytable_css_tlpecfvd74e8455x4sdl { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_2nhy95ccv68d5vpw02yy, .table th.tinytable_css_2nhy95ccv68d5vpw02yy { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value environment 1 0.8752530 0.09888265 3.251346 0.001 environment:river 2 0.9770534 0.11038366 1.814755 0.003 Residual 26 6.9991250 0.79073369 NA NA Total 29 8.8514314 1.00000000 NA NA #Neutral diversity betadisper(beta_q1n$S, sample_metadata$environment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.20565 0.205654 13.599 999 0.001 *** Residuals 28 0.42345 0.015123 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(beta_q1n$S ~ environment+environment:river, by=&quot;terms&quot;, data = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1n$S))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_w72g8k0fta1aea4pl08p, .table th.tinytable_css_w72g8k0fta1aea4pl08p { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_6yhtb1uo5qic6o6ror9r, .table th.tinytable_css_6yhtb1uo5qic6o6ror9r { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value environment 1 1.2426012 0.1513161 5.334035 0.001 environment:river 2 0.9124735 0.1111152 1.958459 0.016 Residual 26 6.0568833 0.7375687 NA NA Total 29 8.2119579 1.0000000 NA NA pairwise.adonis(beta_q1n$S, sample_metadata$river, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Leitzaran vs Erlan 1 0.9212891 4.351007 0.2248465 0.001 0.006 * 2 Leitzaran vs Harpea 1 0.4812759 1.710197 0.1345531 0.138 0.828 3 Leitzaran vs Goizueta 1 0.5487524 1.919473 0.1071166 0.074 0.444 4 Erlan vs Harpea 1 0.3637211 2.453116 0.1969881 0.046 0.276 5 Erlan vs Goizueta 1 1.2562918 6.363523 0.2978686 0.001 0.006 * 6 Harpea vs Goizueta 1 0.5488139 2.095611 0.1600239 0.029 0.174 #Phylogenetic diversity betadisper(beta_q1p$S, sample_metadata$environment) %&gt;% permutest(.) adonis2(beta_q1p$S ~ environment+environment:river, by=&quot;terms&quot;, data = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1p$S))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() #Functional diversity betadisper(beta_q1f$S, sample_metadata$environment) %&gt;% permutest(.) adonis2(beta_q1f$S ~ environment+environment:river, by=&quot;terms&quot;, data = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1f$S))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() pairwise.adonis(beta_q1f$S, sample_metadata$river, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Leitzaran vs Erlan 1 0.38463087 4.3548764 0.225001509 0.057 0.342 2 Leitzaran vs Harpea 1 0.14988805 2.4166139 0.180120996 0.150 0.900 3 Leitzaran vs Goizueta 1 0.01067858 0.1124003 0.006976012 0.773 1.000 4 Erlan vs Harpea 1 0.05098012 0.6559138 0.061553967 0.543 1.000 5 Erlan vs Goizueta 1 0.40695720 3.7796656 0.201263732 0.048 0.288 6 Harpea vs Goizueta 1 0.18675114 2.1123779 0.161098002 0.162 0.972 7.2.2 NMDS ####Richness beta_q0n$S %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(environment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = environment, shape = as.factor(river))) + geom_point(size = 4) + scale_color_manual(values = treatment_colors,labels=c(&quot;high&quot; = &quot;High-altitude&quot;, &quot;low&quot; = &quot;Low-altitude&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) + labs(color=&quot;Altitude&quot;, shape=&quot;River&quot;) #+geom_text_repel(aes(label = sample), size=3) 7.2.2.1 Neutral diversity beta_q1n$S %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(environment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = environment, shape = as.factor(river))) + geom_point(size = 4) + scale_color_manual(values = treatment_colors,labels=c(&quot;high&quot; = &quot;High-altitude&quot;, &quot;low&quot; = &quot;Low-altitude&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) + labs(color=&quot;Altitude&quot;, shape=&quot;River&quot;) 7.2.2.2 Phylogenetic diversity beta_q1p$S %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(environment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = environment, shape = as.factor(river))) + geom_point(size = 4) + scale_color_manual(values = treatment_colors,labels=c(&quot;high&quot; = &quot;High-altitude&quot;, &quot;low&quot; = &quot;Low-altitude&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) + labs(color=&quot;Altitude&quot;, shape=&quot;River&quot;) #+geom_text_repel(aes(label = sample), size=3) 7.2.2.3 Functional diversity beta_q1f$S %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(environment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = environment, shape = as.factor(river))) + geom_point(size = 4) + scale_color_manual(values = treatment_colors,labels=c(&quot;high&quot; = &quot;High-altitude&quot;, &quot;low&quot; = &quot;Low-altitude&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) + labs(color=&quot;Altitude&quot;, shape=&quot;River&quot;) #+geom_text_repel(aes(label = sample), size=3) "],["gut-microbiota-differential-abundance-analysis.html", "Chapter 8 Gut microbiota: Differential abundance analysis 8.1 Structural zeros 8.2 MAGs in different locations and shared among locations 8.3 Enrichment analysis between high and low altitude: Ancombc2", " Chapter 8 Gut microbiota: Differential abundance analysis 8.1 Structural zeros 8.2 MAGs in different locations and shared among locations 8.3 Enrichment analysis between high and low altitude: Ancombc2 8.3.1 With random effect 8.3.1.1 MAG level taxon lfc_environmentlow p_environmentlow domain phylum class order 1 EHA04400_bin.43 -12.318930 5.490024e-06 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 2 EHA04478_bin.132 -12.274240 1.521287e-07 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 3 EHA04398_bin.29 -10.708715 6.323292e-05 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 4 EHA04478_bin.110 -10.587789 4.336082e-05 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 5 EHA03454_bin.92 -10.312366 4.353432e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 6 EHA04397_bin.41 -10.208212 3.875061e-02 d__Bacteria Bacillota_A c__Clostridia Oscillospirales 7 EHA04468_bin.95 -9.164843 5.115730e-04 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 8 EHA04468_bin.189 -8.598183 3.578277e-04 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 9 EHA03454_bin.134 -8.129583 9.841727e-04 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 10 EHA04408_bin.23 -7.959307 1.503256e-03 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 11 EHA04492_bin.209 -7.928111 4.101229e-03 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 12 EHA04478_bin.2 -7.819769 3.922034e-03 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 13 EHA04394_bin.23 -7.723749 2.467889e-03 d__Bacteria Bacillota_A c__Clostridia Oscillospirales 14 EHA03361_bin.9 -7.691597 4.200629e-03 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 15 EHA04492_bin.29 -7.668298 6.800986e-03 d__Bacteria Bacillota_A c__Clostridia Oscillospirales 16 EHA03356_bin.22 -7.602183 4.456164e-03 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 17 EHA04478_bin.85 -7.322941 2.594725e-03 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 18 EHA04478_bin.127 -7.203775 4.460325e-03 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 19 EHA04403_bin.13 -7.062215 8.065688e-03 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 20 EHA04397_bin.35 -7.031335 1.073309e-02 d__Bacteria Verrucomicrobiota c__Verrucomicrobiae Verrucomicrobiales 21 EHA03357_bin.35 -7.008240 7.522043e-03 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 22 EHA04478_bin.145 -6.980707 4.592258e-03 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 23 EHA03363_bin.146 -6.781117 5.732370e-03 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 24 EHA04400_bin.26 -6.604551 4.111674e-03 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 25 EHA03363_bin.76 -6.438055 8.809365e-03 d__Bacteria Bacillota_A c__Clostridia Oscillospirales 26 EHA04478_bin.151 -6.418862 1.556104e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 27 EHA04468_bin.188 -6.393383 1.190117e-02 d__Bacteria Bacillota_A c__Clostridia Clostridiales 28 EHA04395_bin.23 -6.341172 1.498195e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 29 EHA04478_bin.14 -6.290420 2.641912e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 30 EHA04401_bin.20 -6.289835 3.895399e-02 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 31 EHA03454_bin.69 -6.000569 9.058034e-03 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 32 EHA04468_bin.20 -5.850162 1.671789e-02 d__Bacteria Bacillota_A c__Clostridia Eubacteriales 33 EHA03454_bin.66 -5.594523 2.614325e-02 d__Bacteria Bacillota_A c__Clostridia Oscillospirales 34 EHA04468_bin.128 -5.204938 2.604043e-02 d__Bacteria Bacillota_A c__Clostridia Oscillospirales 35 EHA03362_bin.37 -5.142072 3.709742e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 36 EHA04468_bin.53 -5.093408 3.840645e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 37 EHA03357_bin.6 -5.078201 4.138868e-02 d__Bacteria Bacillota_A c__Clostridia Oscillospirales 38 EHA04468_bin.39 -5.041080 4.432392e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 39 EHA04478_bin.159 -4.774281 4.569592e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 40 EHA04468_bin.203 -4.629078 3.633978e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 41 EHA04404_bin.31 4.351039 4.773325e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 42 EHA04492_bin.34 5.014893 4.616299e-02 d__Bacteria Bacillota_B c__Peptococcia Peptococcales 43 EHA04485_bin.118 5.993300 2.033728e-02 d__Bacteria Bacillota_A c__Clostridia Peptostreptococcales 44 EHA04492_bin.130 6.116935 1.470549e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 45 EHA03363_bin.132 6.197466 2.867255e-02 d__Bacteria Bacillota c__Bacilli Mycoplasmatales 46 EHA03363_bin.98 6.769846 6.615126e-03 d__Bacteria Bacillota_A c__Clostridia Oscillospirales 47 EHA04485_bin.18 9.767863 3.813465e-05 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales family genus species genome 1 Rikenellaceae Mucinivorans Unclassified Mucinivorans EHA04400_bin.43 2 Rikenellaceae Alistipes_A Unclassified Alistipes_A EHA04478_bin.132 3 Rikenellaceae Unclassified Rikenellaceae Unclassified Rikenellaceae EHA04398_bin.29 4 Bacteroidaceae Bacteroides Unclassified Bacteroides EHA04478_bin.110 5 Rikenellaceae Mucinivorans Unclassified Mucinivorans EHA03454_bin.92 6 Oscillospiraceae Pseudoflavonifractor Unclassified Pseudoflavonifractor EHA04397_bin.41 7 Tannerellaceae Parabacteroides Unclassified Parabacteroides EHA04468_bin.95 8 Rikenellaceae Gallalistipes Unclassified Gallalistipes EHA04468_bin.189 9 Bacteroidaceae Bacteroides Unclassified Bacteroides EHA03454_bin.134 10 Rikenellaceae Mucinivorans Unclassified Mucinivorans EHA04408_bin.23 11 Rikenellaceae Mucinivorans Unclassified Mucinivorans EHA04492_bin.209 12 Rikenellaceae Mucinivorans Unclassified Mucinivorans EHA04478_bin.2 13 Ruminococcaceae Angelakisella Unclassified Angelakisella EHA04394_bin.23 14 Rikenellaceae Mucinivorans Unclassified Mucinivorans EHA03361_bin.9 15 Ruminococcaceae Angelakisella Unclassified Angelakisella EHA04492_bin.29 16 Rikenellaceae Mucinivorans Unclassified Mucinivorans EHA03356_bin.22 17 Rikenellaceae Alistipes Unclassified Alistipes EHA04478_bin.85 18 Rikenellaceae JAJBUQ01 Unclassified JAJBUQ01 EHA04478_bin.127 19 Rikenellaceae JADFUS01 Unclassified JADFUS01 EHA04403_bin.13 20 Akkermansiaceae Unclassified Akkermansiaceae Unclassified Akkermansiaceae EHA04397_bin.35 21 Lachnospiraceae Clostridium_Q Unclassified Clostridium_Q EHA03357_bin.35 22 Rikenellaceae Alistipes_A Unclassified Alistipes_A EHA04478_bin.145 23 Rikenellaceae Gallalistipes Unclassified Gallalistipes EHA03363_bin.146 24 Rikenellaceae Unclassified Rikenellaceae Unclassified Rikenellaceae EHA04400_bin.26 25 Oscillospiraceae UMGS1202 Unclassified UMGS1202 EHA03363_bin.76 26 Rikenellaceae Alistipes Unclassified Alistipes EHA04478_bin.151 27 Clostridiaceae Clostridium Unclassified Clostridium EHA04468_bin.188 28 P3 Unclassified P3 Unclassified P3 EHA04395_bin.23 29 Marinifilaceae Odoribacter Unclassified Odoribacter EHA04478_bin.14 30 Cellulosilyticaceae Unclassified Cellulosilyticaceae Unclassified Cellulosilyticaceae EHA04401_bin.20 31 Rikenellaceae Unclassified Rikenellaceae Unclassified Rikenellaceae EHA03454_bin.69 32 Eubacteriaceae Unclassified Eubacteriaceae Unclassified Eubacteriaceae EHA04468_bin.20 33 Ruminococcaceae JAHHTP01 Unclassified JAHHTP01 EHA03454_bin.66 34 Oscillospiraceae Dysosmobacter Unclassified Dysosmobacter EHA04468_bin.128 35 Unclassified Bacteroidales Unclassified Bacteroidales Unclassified Bacteroidales EHA03362_bin.37 36 Bacteroidaceae UBA1794 Unclassified UBA1794 EHA04468_bin.53 37 Oscillospiraceae UMGS1202 Unclassified UMGS1202 EHA03357_bin.6 38 Rikenellaceae JADFUS01 Unclassified JADFUS01 EHA04468_bin.39 39 Tannerellaceae Parabacteroides Unclassified Parabacteroides EHA04478_bin.159 40 Tannerellaceae Parabacteroides Unclassified Parabacteroides EHA04468_bin.203 41 Bacteroidaceae Bacteroides Unclassified Bacteroides EHA04404_bin.31 42 Peptococcaceae Unclassified Peptococcaceae Unclassified Peptococcaceae EHA04492_bin.34 43 Anaerovoracaceae Aminipila Unclassified Aminipila EHA04485_bin.118 44 Bacteroidaceae Bacteroides Unclassified Bacteroides EHA04492_bin.130 45 Mycoplasmoidaceae Malacoplasma Unclassified Malacoplasma EHA03363_bin.132 46 Ruminococcaceae RGIG7389 Unclassified RGIG7389 EHA03363_bin.98 47 Rikenellaceae Mucinivorans Unclassified Mucinivorans EHA04485_bin.18 8.3.1.1.1 Controling structural components in Ancombc taxon lfc_environmentlow p_environmentlow domain phylum class order 1 EHA04400_bin.26 -1.6965058 4.005391e-05 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 2 EHA04405_bin.32 -1.5492218 1.305902e-04 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 3 EHA03361_bin.18 -1.3702015 1.630577e-02 d__Bacteria Verrucomicrobiota c__Verrucomicrobiae Verrucomicrobiales 4 EHA04400_bin.33 -1.3394011 5.728604e-03 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 5 EHA04468_bin.39 -1.2454757 2.413877e-03 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 6 EHA04408_bin.23 -1.0627066 2.817204e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 7 EHA04468_bin.203 -1.0272019 8.302243e-03 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 8 EHA03363_bin.82 -0.9621571 1.593110e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 9 EHA04468_bin.30 -0.8857859 4.443803e-02 d__Bacteria Bacillota_A c__Clostridia UBA1381 10 EHA04468_bin.160 -0.8744345 8.250180e-03 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 11 EHA03361_bin.28 -0.8133773 2.310233e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 12 EHA03454_bin.26 -0.7568026 3.643557e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 13 EHA04404_bin.31 0.7502829 2.586824e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 14 EHA04399_bin.32 0.8752114 3.037772e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 15 EHA04407_bin.2 0.8818430 3.704043e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 16 EHA04492_bin.177 0.9133204 3.413127e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 17 EHA03358_bin.6 0.9445834 4.953087e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 18 EHA04492_bin.6 1.0280909 2.134818e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 19 EHA03358_bin.9 1.1648815 1.468986e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 20 EHA03353_bin.11 1.1699909 2.399501e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 21 EHA04492_bin.130 1.3653194 1.477548e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 22 EHA04492_bin.22 1.4584354 1.531920e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 23 EHA03363_bin.211 2.0051991 1.695183e-02 d__Bacteria Bacillota_A c__Clostridia Oscillospirales 24 EHA03357_bin.18 2.1216644 4.773157e-02 d__Bacteria Pseudomonadota c__Gammaproteobacteria Enterobacterales family genus species genome 1 Rikenellaceae EHA04400_bin.26 2 Bacteroidaceae Bacteroides EHA04405_bin.32 3 Akkermansiaceae EHA03361_bin.18 4 Rikenellaceae CAJGBR01 EHA04400_bin.33 5 Rikenellaceae JADFUS01 EHA04468_bin.39 6 Rikenellaceae Mucinivorans EHA04408_bin.23 7 Tannerellaceae Parabacteroides EHA04468_bin.203 8 Tannerellaceae Parabacteroides_B EHA03363_bin.82 9 CALYAR01 EHA04468_bin.30 10 Rikenellaceae JADFUS01 EHA04468_bin.160 11 Bacteroidaceae Bacteroides EHA03361_bin.28 12 Rikenellaceae Alistipes EHA03454_bin.26 13 Bacteroidaceae Bacteroides EHA04404_bin.31 14 Bacteroidaceae Bacteroides EHA04399_bin.32 15 Bacteroidaceae Bacteroides EHA04407_bin.2 16 Tannerellaceae Parabacteroides EHA04492_bin.177 17 Bacteroidaceae Bacteroides EHA03358_bin.6 18 Rikenellaceae Mucinivorans EHA04492_bin.6 19 Bacteroidaceae Bacteroides EHA03358_bin.9 20 Bacteroidaceae Bacteroides EHA03353_bin.11 21 Bacteroidaceae Bacteroides EHA04492_bin.130 22 Marinifilaceae EHA04492_bin.22 23 Ruminococcaceae UBA866 EHA03363_bin.211 24 Enterobacteriaceae Buttiauxella Buttiauxella ferragutiae EHA03357_bin.18 8.3.1.2 Phylum level [1] taxon lfc_environmentlow p_environmentlow &lt;0 rows&gt; (or 0-length row.names) 8.3.1.3 Family level taxon lfc_environmentlow p_environmentlow 1 f__Eubacteriaceae -5.850162 0.007436477 2 f__ -4.863415 0.023059342 8.3.1.4 Genera taxon lfc_environmentlow p_environmentlow 1 g__JAJBUQ01 -7.203775 0.002909580 2 g__Alistipes_A -5.846414 0.003570632 3 g__Angelakisella -6.825025 0.003927783 4 g__UMGS1202 -6.165586 0.007423339 5 g___11 -5.036344 0.008327603 6 g___22 -5.850162 0.011950448 7 g__Dysosmobacter -5.204938 0.018818677 8 g__Malacoplasma 6.197466 0.023297110 9 g__Aminipila 5.211662 0.024779035 10 g__UBA1794 -5.093408 0.029750357 11 g___4 -4.863415 0.033257906 12 g__UMGS1251 5.629309 0.044352514 8.3.2 Without random effect 8.3.2.1 MAG level 8.3.2.1.1 Controling structural components in Ancombc 8.3.3 Phylum level taxon lfc_environmentlow p_environmentlow 1 p__Deferribacterota -3.509864 0.01121188 8.3.4 Family level taxon lfc_environmentlow p_environmentlow 1 f__P3 -7.695749 0.0007603561 2 f__Eubacteriaceae -5.793231 0.0038674637 3 f__Sedimentibacteraceae -5.877752 0.0045305115 4 f__ -4.806484 0.0140544801 5 f__Mucispirillaceae -3.509864 0.0170002586 6 f__Succinispiraceae -4.385067 0.0216017199 7 f__UBA1820 -4.481364 0.0268902503 8 f__UBA3637 -3.744973 0.0466535776 8.3.5 Genera taxon lfc_environmentlow p_environmentlow 1 g__Evtepia -9.912187 1.308883e-05 2 g__Anaerorhabdus -9.271642 1.371240e-04 3 g__Anaerovorax -7.711264 1.430783e-03 4 g___14 -7.695749 1.624096e-03 5 g__JAIHAL01 -8.032909 1.626376e-03 6 g__JAJBUQ01 -7.146844 1.684392e-03 7 g__Alistipes_A -5.789483 1.881596e-03 8 g__Angelakisella -6.768095 2.319575e-03 9 g__UMGS1202 -6.108655 4.633506e-03 10 g___11 -4.979413 4.738300e-03 11 g__Anaerotignum 6.010418 6.875410e-03 12 g___22 -5.793231 7.894555e-03 13 g___21 -5.877752 8.713492e-03 14 g__Dysosmobacter -5.148008 1.282587e-02 15 g__Malacoplasma 6.254397 1.552184e-02 16 g__Aminipila 5.268593 1.556761e-02 17 g__UBA1794 -5.036477 2.175131e-02 18 g___4 -4.806484 2.442676e-02 19 g__Plesiomonas -5.788715 2.821802e-02 20 g__UMGS1251 5.686240 3.183983e-02 21 g___30 -4.385067 3.603026e-02 22 g___10 -3.509864 3.908439e-02 23 g___26 -4.481364 4.146346e-02 24 g___25 -4.310094 4.310520e-02 25 g__Copranaerobaculum 5.087706 4.338463e-02 "],["skin-microbiota-differential-abundance-analysis.html", "Chapter 9 Skin microbiota: Differential abundance analysis 9.1 Structural zeros 9.2 MAGs in different locations and shared among locations 9.3 Enrichment analysis between high and low altitude: Ancombc2", " Chapter 9 Skin microbiota: Differential abundance analysis 9.1 Structural zeros 9.2 MAGs in different locations and shared among locations 9.3 Enrichment analysis between high and low altitude: Ancombc2 9.3.1 With random effect 9.3.1.1 MAG level [1] taxon lfc_environmentlow p_environmentlow domain phylum class order [8] family genus species genome &lt;0 rows&gt; (or 0-length row.names) 9.3.1.2 Phylum level [1] taxon lfc_environmentlow p_environmentlow &lt;0 rows&gt; (or 0-length row.names) 9.3.1.3 Family level [1] taxon lfc_environmentlow p_environmentlow &lt;0 rows&gt; (or 0-length row.names) 9.3.2 Without random effect 9.3.2.1 MAG level taxon lfc_environmentlow p_environmentlow domain phylum class order family 1 EHA04832_bin.14 -6.936422 0.01500283 d__Bacteria Pseudomonadota c__Gammaproteobacteria Burkholderiales Methylophilaceae genus species genome 1 Methylotenera Unclassified Methylotenera EHA04832_bin.14 "],["gut-microbiota-functional-analysis.html", "Chapter 10 Gut microbiota: functional analysis 10.1 MCI 10.2 Wilcoxon", " Chapter 10 Gut microbiota: functional analysis 10.1 MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% # filter(time_point==&quot;0_Wild&quot;) %&gt;% group_by(environment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 environment MCI sd &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; 1 low 0.321 0.0149 2 high 0.298 0.0288 MCI &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) # %&gt;% # filter(diet!=&quot;Post_grass&quot;) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.78617, p-value = 3.708e-05 wilcox.test(value ~ environment, data=MCI) Wilcoxon rank sum exact test data: value by environment W = 184, p-value = 0.002306 alternative hypothesis: true location shift is not equal to 0 10.2 Wilcoxon 10.2.1 Community elements differences: Elements low high Function 1 B0205 0.6215078000 0.556359700 Amino acid biosynthesis_Threonine 2 B0208 0.7210440000 0.636853500 Amino acid biosynthesis_Valine 3 B0211 0.7945017000 0.725047800 Amino acid biosynthesis_Lysine 4 B0212 0.6037965000 0.534577500 Amino acid biosynthesis_Arginine 5 B0216 0.5185759000 0.403716800 Amino acid biosynthesis_Tryptophan 6 B0217 0.4350579000 0.386313200 Amino acid biosynthesis_Phenylalanine 7 B0303 0.2366397000 0.210934100 Amino acid derivative biosynthesis_Ectoine 8 B0309 0.0982039000 0.080454810 Amino acid derivative biosynthesis_Putrescine 9 B0310 0.0074509910 0.001588408 Amino acid derivative biosynthesis_Tryptamine 10 B0403 0.5460416000 0.526315000 SCFA biosynthesis_Propionate 11 B0602 0.7980851000 0.748664900 Organic anion biosynthesis_Fumarate 12 B0710 0.1077906000 0.069865730 Vitamin biosynthesis_Phylloquinone (K1) 13 B0805 0.2209180000 0.163027300 Aromatic compound biosynthesis_Indole-3-acetate 14 B1014 0.0002108536 0.002070099 Antibiotic biosynthesis_Kanosamine 15 D0104 0.1621682000 0.121988700 Lipid degradation_Dicarboxylic acids 16 D0204 0.4792235000 0.412658000 Polysaccharide degradation_Chitin 17 D0206 0.5883225000 0.484839300 Polysaccharide degradation_Alpha galactan 18 D0210 0.3375139000 0.277216900 Polysaccharide degradation_Beta-mannan 19 D0213 0.3703334000 0.300628500 Polysaccharide degradation_Mucin 20 D0302 0.1295141100 0.087387210 Sugar degradation_Sucrose 21 D0310 0.4599834000 0.385078900 Sugar degradation_NeuAc 22 D0603 0.0174939660 0.004478505 Nitrogen compound degradation_Urate 23 D0606 0.0327311000 0.019533340 Nitrogen compound degradation_Allantoin 24 D0704 0.4279568000 0.338026300 Alcohol degradation_Glycerol 25 D0807 0.0550681500 0.028201350 Xenobiotic degradation_Catechol 26 D0816 0.1240800200 0.098151990 Xenobiotic degradation_Phenylacetate 27 D0817 0.0139664790 0.008498965 Xenobiotic degradation_Trans-cinnamate 28 S0104 0.2384995000 0.206859100 Cellular structure_Lipoteichoic acid 10.2.2 Community functions differences Code_function low high Function 1 B02 0.57566870 0.52445070 Amino acid biosynthesis 2 B08 0.45983730 0.42094060 Aromatic compound biosynthesis 3 D08 0.02386816 0.01341748 Xenobiotic degradation 10.2.3 Community domains differences Code_domain low high 1 Biosynthesis 0.4097942 0.3885795 2 Degradation 0.2194927 0.1947749 "],["skin-microbiota-functional-analysis.html", "Chapter 11 Skin microbiota: functional analysis 11.1 MCI 11.2 Wilcoxon", " Chapter 11 Skin microbiota: functional analysis 11.1 MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% # filter(time_point==&quot;0_Wild&quot;) %&gt;% group_by(environment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 environment MCI sd &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; 1 low 0.385 0.0503 2 high 0.326 0.0525 MCI &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) # %&gt;% # filter(diet!=&quot;Post_grass&quot;) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.93284, p-value = 0.05846 wilcox.test(value ~ environment, data=MCI) Wilcoxon rank sum exact test data: value by environment W = 183, p-value = 0.0009557 alternative hypothesis: true location shift is not equal to 0 11.2 Wilcoxon 11.2.1 Community elements differences: Elements low high Function 1 B0205 0.656049000 0.475561400 Amino acid biosynthesis_Threonine 2 B0207 0.558104900 0.437034800 Amino acid biosynthesis_Methionine 3 B0208 0.720234000 0.453394600 Amino acid biosynthesis_Valine 4 B0209 0.817868200 0.533705800 Amino acid biosynthesis_Isoleucine 5 B0210 0.743591700 0.450369200 Amino acid biosynthesis_Leucine 6 B0211 0.692446900 0.527403300 Amino acid biosynthesis_Lysine 7 B0212 0.662103100 0.482202700 Amino acid biosynthesis_Arginine 8 B0213 0.658973300 0.404776500 Amino acid biosynthesis_Proline 9 B0214 0.538837000 0.427169000 Amino acid biosynthesis_Glutamate 10 B0215 0.555625900 0.384205800 Amino acid biosynthesis_Histidine 11 B0216 0.656080300 0.398413900 Amino acid biosynthesis_Tryptophan 12 B0218 0.547111400 0.454774400 Amino acid biosynthesis_Tyrosine 13 B0219 0.130706150 0.053109630 Amino acid biosynthesis_GABA 14 B0220 0.278230900 0.157103900 Amino acid biosynthesis_Beta-alanine 15 B0221 0.611932300 0.441615300 Amino acid biosynthesis_Ornithine 16 B0303 0.262207900 0.219991800 Amino acid derivative biosynthesis_Ectoine 17 B0307 0.331732800 0.190395900 Amino acid derivative biosynthesis_Spermidine 18 B0309 0.163550590 0.066682630 Amino acid derivative biosynthesis_Putrescine 19 B0310 0.324450620 0.096901480 Amino acid derivative biosynthesis_Tryptamine 20 B0601 0.624014300 0.519070800 Organic anion biosynthesis_Succinate 21 B0602 0.822709900 0.702780300 Organic anion biosynthesis_Fumarate 22 B0604 0.442414500 0.663182100 Organic anion biosynthesis_L-lactate 23 B0605 0.345982500 0.192877900 Organic anion biosynthesis_D-lactate 24 B0701 0.634894500 0.480184300 Vitamin biosynthesis_Thiamine (B1) 25 B0702 0.816474800 0.727775100 Vitamin biosynthesis_Riboflavin (B2) 26 B0704 0.695651400 0.423724000 Vitamin biosynthesis_Pantothenate (B5) 27 B0705 0.427025500 0.322247500 Vitamin biosynthesis_Pyridoxal-P (B6) 28 B0707 0.761055800 0.687081300 Vitamin biosynthesis_Tetrahydrofolate (B9) 29 B0708 0.529524200 0.397595900 Vitamin biosynthesis_Cobalamin (B12) 30 B0802 0.834491600 0.525997700 Aromatic compound biosynthesis_Gallate 31 B0803 0.747515200 0.466065500 Aromatic compound biosynthesis_Chorismate 32 B0804 0.713239900 0.564040300 Aromatic compound biosynthesis_Dipicolinate 33 B1029 0.020309560 0.109015400 Antibiotic biosynthesis_Pyrrolnitrin 34 D0101 0.456920700 0.195072900 Lipid degradation_Triglyceride 35 D0204 0.380570100 0.297753100 Polysaccharide degradation_Chitin 36 D0206 0.330051000 0.188121700 Polysaccharide degradation_Alpha galactan 37 D0212 0.347270600 0.568537200 Polysaccharide degradation_Arabinan 38 D0213 0.183368100 0.104352100 Polysaccharide degradation_Mucin 39 D0308 0.195833000 0.100759700 Sugar degradation_L-Rhamnose 40 D0309 0.318345100 0.222315900 Sugar degradation_Galactose 41 D0310 0.022423170 0.195423010 Sugar degradation_NeuAc 42 D0501 0.621591000 0.281872700 Amino acid degradation_Serine 43 D0505 0.406362500 0.268585000 Amino acid degradation_Valine 44 D0506 0.413331800 0.225587800 Amino acid degradation_Isoleucine 45 D0507 0.464046400 0.327584800 Amino acid degradation_Leucine 46 D0508 0.327950100 0.201021000 Amino acid degradation_Lysine 47 D0512 0.453178200 0.259483100 Amino acid degradation_Histidine 48 D0601 0.346266800 0.600710800 Nitrogen compound degradation_Nitrate 49 D0603 0.190956000 0.100831600 Nitrogen compound degradation_Urate 50 D0613 0.770957000 0.465556200 Nitrogen compound degradation_Taurine 51 D0704 0.599817900 0.391382100 Alcohol degradation_Glycerol 52 D0706 0.002325978 0.005227122 Alcohol degradation_Ethylene glycol 53 D0816 0.254836100 0.147730100 Xenobiotic degradation_Phenylacetate 54 D0907 0.430336700 0.250939200 Antibiotic degradation_Tetracycline 55 D0908 0.313546400 0.169073500 Antibiotic degradation_Macrolide 56 S0103 0.146438700 0.187369500 Cellular structure_Teichoic acid 57 S0105 0.710656000 0.571949600 Cellular structure_Lipopolysaccharide 11.2.2 Community functions differences Code_function low high Function 1 B02 0.60472030 0.45731280 Amino acid biosynthesis 2 B03 0.30395930 0.15951330 Amino acid derivative biosynthesis 3 B06 0.70733810 0.63489430 Organic anion biosynthesis 4 B07 0.49899850 0.41498730 Vitamin biosynthesis 5 B08 0.47988990 0.39738120 Aromatic compound biosynthesis 6 B10 0.07930675 0.11431308 Antibiotic biosynthesis 7 D01 0.49240620 0.39070900 Lipid degradation 8 D03 0.25054260 0.17263400 Sugar degradation 9 D05 0.37578760 0.31196260 Amino acid degradation 10 D07 0.37342050 0.27095720 Alcohol degradation 11 D09 0.17066803 0.09778859 Antibiotic degradation 11.2.3 Community domains differences Code_domain low high 1 Biosynthesis 0.4222222 0.3583441 2 Degradation 0.2852374 0.2242999 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
